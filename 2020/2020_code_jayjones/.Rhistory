betaYr16 ~ dnorm(0, 1)
betaYr17 ~ dnorm(0, 1) ### need to add in my years
betaYr18 ~ dnorm(0, 1)
betaYr19 ~ dnorm(0, 1)
betaPre ~ dnorm(0, 4) # Trt and Control sites should be similar pre-harvest
betaPost ~ dnorm(0, 0.25) ### need to change these for my 5 trt - four betas, bc excluding control
betaDW ~ dnorm(0, 0.25) # dwd count
sd.b0 ~ dgamma(1, 2) # st dev?
tau.b0 <- 1/(sd.b0 * sd.b0) # dont know what this is
# treatment effect estimator
TrtEffect <- betaPost - betaPre ### redefine using comparisons I'm interested in
# priors for detection random effects
mu.a0 ~ dnorm(0, 0.333) ### need to add mu/sd/tau terms for all my trt betas, including interactions, write out model to keep track
mu.a1 ~ dnorm(0, 1) # Trt
mu.a2 ~ dnorm(0, 1) # AT
mu.a3 ~ dnorm(0, 1) # AT^2
mu.a4 ~ dnorm(0, 1) # Trt*AT
mu.a5 ~ dnorm(0, 1) # Trt*AT^2
sd.a0 ~ dgamma(1, 2) # stdev for each plot level effect?
sd.a1 ~ dgamma(2, 1) # hyper-prior for Trt effect; allow for greater prior uncertainty than other effects.
sd.a2 ~ dgamma(1, 2)
sd.a3 ~ dgamma(1, 2)
sd.a4 ~ dgamma(1, 2)
sd.a5 ~ dgamma(1, 2)
tau.a0 <- 1/(sd.a0 * sd.a0) # what are all these?
tau.a1 <- 1/(sd.a1 * sd.a1)
tau.a2 <- 1/(sd.a2 * sd.a2)
tau.a3 <- 1/(sd.a3 * sd.a3)
tau.a4 <- 1/(sd.a4 * sd.a4)
tau.a5 <- 1/(sd.a5 * sd.a5)
# detection model random effects (by year)
for(i in 1:nyear){ ### rewrite using all trt terms from above
a0[i] ~ dnorm(mu.a0, tau.a0) # each plot level effect by year
aTrt[i] ~ dnorm(mu.a1, tau.a1)
aAT[i] ~ dnorm(mu.a2, tau.a2)
aAT2[i] ~ dnorm(mu.a3, tau.a3)
aTrtAT[i] ~ dnorm(mu.a4, tau.a4)
aTrtAT2[i] ~ dnorm(mu.a5, tau.a5)
}
for(i in 1:nstand){
# occupancy stand-level effects
mu1[i] <- beta0 + betaTF*TFCL1[i] # block term
mu1i[i] ~ dnorm(mu1[i], tau.b0)
b0[i] <- mu1i[i] - mu1[i] # stand-level random effect
for(k in 1:nyear){
# occupancy stand-year level effects
mu2ik[i,k] <- mu1i[i] + betaYr14*Year2014[k,i] + betaYr15*Year2015[k,i] + betaYr16*Year2016[k,i] +
betaYr17*Year2017[k, i] + betaYr18*Year2018[k, i] + betaYr19*Year2019[k, i] + ### add in 2023-2024
betaPre*PreTrt2[k,i] + betaPost*PostTrt2[k,i] ### change trt terms
}
}
for(i in 1:nall){
# occupancy plot-level effects
mu3ikj[i] <- mu2ik[Stand3[i], Year3[i]] + betaDW*DW3[i]
logit(psi[i]) <- mu3ikj[i]
z[i] ~ dbern(psi[i])
# detection model
logit(p[i]) <- a0[Year3[i]] + aTrt[Year3[i]]*Trt3[i] + aAT[Year3[i]]*AT3[i] + aAT2[Year3[i]]*AT3[i]*AT3[i] +
aTrtAT[Year3[i]]*Trt3[i]*AT3[i] + aTrtAT2[Year3[i]]*Trt3[i]*AT3[i]*AT3[i] ### add in all trt/interaction terms from eq2 paper
p.eff[i] <- z[i] * p[i]
for(j in 1:nvisit){
# likelihood
y[i,j] ~ dbern(p.eff[i])
}
}
}
model.a1 <- function(){
# Royle-Nichols abundance model
# priors for occupancy model
beta0 ~ dnorm(0, 0.333)
betaTF ~ dnorm(0, 1)
betaYr14 ~ dnorm(0, 1)
betaYr15 ~ dnorm(0, 1)
betaYr16 ~ dnorm(0, 1)
betaYr17 ~ dnorm(0, 1)
betaYr18 ~ dnorm(0, 1)
betaYr19 ~ dnorm(0, 1)
betaPre ~ dnorm(0, 4) # Trt and Control sites should be similar pre-harvest
betaPost ~ dnorm(0, 0.25)
betaDW ~ dnorm(0, 0.25)
sd.b0 ~ dgamma(1, 2)
tau.b0 <- 1/(sd.b0 * sd.b0)
# treatment effect estimator
TrtEffect <- betaPost - betaPre
# priors for detection random effects
mu.a0 ~ dnorm(0, 0.333)
mu.a1 ~ dnorm(0, 1) # Trt
mu.a2 ~ dnorm(0, 1) # AT
mu.a3 ~ dnorm(0, 1) # AT^2
mu.a4 ~ dnorm(0, 1) # Trt*AT
mu.a5 ~ dnorm(0, 1) # Trt*AT^2
sd.a0 ~ dgamma(1, 2)
sd.a1 ~ dgamma(2, 1)
sd.a2 ~ dgamma(1, 2)
sd.a3 ~ dgamma(1, 2)
sd.a4 ~ dgamma(1, 2)
sd.a5 ~ dgamma(1, 2)
tau.a0 <- 1/(sd.a0 * sd.a0)
tau.a1 <- 1/(sd.a1 * sd.a1)
tau.a2 <- 1/(sd.a2 * sd.a2)
tau.a3 <- 1/(sd.a3 * sd.a3)
tau.a4 <- 1/(sd.a4 * sd.a4)
tau.a5 <- 1/(sd.a5 * sd.a5)
# detection model random effects (by year)
for(i in 1:nyear){
a0[i] ~ dnorm(mu.a0, tau.a0)
aTrt[i] ~ dnorm(mu.a1, tau.a1)
aAT[i] ~ dnorm(mu.a2, tau.a2)
aAT2[i] ~ dnorm(mu.a3, tau.a3)
aTrtAT[i] ~ dnorm(mu.a4, tau.a4)
aTrtAT2[i] ~ dnorm(mu.a5, tau.a5)
}
for(i in 1:nstand){
# occupancy stand-level effects
mu1[i] <- beta0 + betaTF*TFCL1[i]
mu1i[i] ~ dnorm(mu1[i], tau.b0)
b0[i] <- mu1i[i] - mu1[i] # random effect
for(k in 1:nyear){
# occupancy stand-year level effects
mu2ik[i,k] <- mu1i[i] + betaYr14*Year2014[k,i] + betaYr15*Year2015[k,i] + betaYr16*Year2016[k,i] +
betaYr17*Year2017[k, i] + betaYr18*Year2018[k, i] + betaYr19*Year2019[k, i] +
betaPre*PreTrt2[k,i] + betaPost*PostTrt2[k,i]
}
}
for(i in 1:nall){
# occupancy plot-level effects
mu3ikj[i] <- mu2ik[Stand3[i], Year3[i]] + betaDW*DW3[i]
log(lambda[i]) <- mu3ikj[i]
N[i] ~ dpois(lambda[i])
# detection model
logit(theta[i]) <- a0[Year3[i]] + aTrt[Year3[i]]*Trt3[i] + aAT[Year3[i]]*AT3[i] + aAT2[Year3[i]]*AT3[i]*AT3[i] +
aTrtAT[Year3[i]]*Trt3[i]*AT3[i] + aTrtAT2[Year3[i]]*Trt3[i]*AT3[i]*AT3[i]
innerterm[i] <- 1 - theta[i]
p[i] <- 1 - pow(innerterm[i], N[i])
for(j in 1:nvisit){
# likelihood
y[i,j] ~ dbin(p[i], 1)
}
}
}
library(R2jags)
install.packages(R2jags)
install.packages(Rjags)
brew install jags
brew install jags
install.packages("rjags")
install.packages("R2jags")
library(R2jags)
rm(list=ls())
load("OSS ENES packaged data thru 2019.RData")
setwd("~/OneDrive/Documents/Academic/OSU/Git/oss-occu/2020/2020_code_jayjones")
load("OSS ENES packaged data thru 2019.RData")
str(osslist)
source("JAGS BACI models 2019.r")
# diagnostic check
myFun <- function(n, y, p){
out <- matrix(ncol=3, nrow=n)
miss <- is.na(y)
for(i in 1:n){
out[i,1] <- sum(((as.numeric(y) - rep(p[i,], 3))^2)[!miss]) # 253
out[i,2] <- sum(((rbinom(length(miss), 1, rep(p[i,], 3)) - rep(p[i,], 3))^2)[!miss]) # 252.2
}
out[,3] <- ifelse(out[,1] > out[,2], 1, 0)
out
}
# model setup
zst.o <- apply(osslist$yo, 1, max, na.rm=T)
inits.o <- function(){list(z=zst.o)}
params.o <- c("beta0", "betaTF", "betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"betaDW", "betaPre", "betaPost", "TrtEffect",
"mu.a0", "mu.a1", "mu.a2", "mu.a3", "mu.a4", "mu.a5", "p.eff",
"b0", "sd.b0", "a0")
test.data.o <- with(osslist, list(y=yo, nyear=nyear, nstand=nstand, Year2014=Year2014, Year2015=Year2015,
Year2016=Year2016, Year2017=Year2017, Year2018=Year2018, Year2019=Year2019,
TFCL1=TFCL1, PreTrt2=PreTrt2,
PostTrt2=PostTrt2, DW3=(DW3-3)/2, AT3=(AT3-12)/5.5, Trt3=Trt3,
nall=nall, nvisit=nvisit, Year3=Year3, Stand3=Stand3))
# fit the model
system.time(out.oh1 <- jags(test.data.o, inits.o, params.o, model.h1, n.chains=4,
n.thin=10, n.iter=1100, n.burnin=100)) # 212s
# check diagnostics
hist(out.oh1$BUGSoutput$summary[,8]) # ~all <1.05
out.oh1$BUGSoutput$summary[rownames(out.oh1$BUGSoutput$summary) %in% c("TrtEffect", "betaPre", "betaPost", "beta0", "betaDW", "betaTF",
"betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"mu.a0", "mu.a1"),]
#dont really know what this is doing
p.eff.oh1 <- out.oh1$BUGSoutput$sims.list$p.eff
d.oh1 <- myFun(400, y=as.numeric(osslist$yo), p=p.eff.oh1) #jw 9/18 i changed to 400 from 1000 bc error: Error in p[i, ] : subscript out of bounds
summary(d.oh1) # 0.54 => consistent with model
# model setup
zst.e <- apply(osslist$ye, 1, max, na.rm=T)
inits.e <- function(){list(z=zst.e)}
params.e <- c("beta0", "betaTF", "betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"betaDW", "TrtEffect", "betaPre", "betaPost",
"mu.a0", "mu.a1", "mu.a2", "mu.a3", "mu.a4", "mu.a5", "p.eff",
"b0", "sd.b0", "a0")
test.data.e <- with(osslist, list(y=ye, nyear=nyear, nstand=nstand, Year2014=Year2014, Year2015=Year2015,
Year2016=Year2016, Year2017=Year2017, Year2018=Year2018, Year2019=Year2019,
TFCL1=TFCL1, PreTrt2=PreTrt2,
PostTrt2=PostTrt2, DW3=(DW3-3)/2, AT3=(AT3-12)/5.5, Trt3=Trt3,
nall=nall, nvisit=nvisit, Year3=Year3, Stand3=Stand3))
# fit the model
system.time(out.eh1 <- jags(test.data.e, inits.e, params.e, model.h1, n.chains=4,
n.thin=10, n.iter=1100, n.burnin=100))
# diagnostic checks
out.eh1$BUGSoutput$summary[rownames(out.eh1$BUGSoutput$summary) %in% c("TrtEffect", "betaPre", "betaPost", "beta0", "betaDW", "betaTF",
"betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"mu.a0", "mu.a1"),]
hist(out.eh1$BUGSoutput$summary[,8]) # small fraction (<1%?) gt than 1.05
p.eff.eh1 <- out.eh1$BUGSoutput$sims.list$p.eff
d.eh1 <- myFun(400, y=as.numeric(osslist$ye), p=p.eff.eh1) #jw 9/18 i changed to 400 from 1000
summary(d.eh1) # 0.54 => consistent with model
# model setup
zst.o <- apply(osslist$yo, 1, max, na.rm=T)
inits.o <- function(){list(N=zst.o)}
params.o <- c("beta0", "betaTF", "betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"betaDW", "betaPre", "betaPost", "TrtEffect",
"mu.a0", "mu.a1", "mu.a2", "mu.a3", "mu.a4", "mu.a5",
"a0", "aTrt", "aAT", "aAT2", "aTrtAT", "aTrtAT2",
"N", "theta", "p", "b0", "sd.b0")
test.data.o <- with(osslist, list(y=yo, nyear=nyear, nstand=nstand, Year2014=Year2014, Year2015=Year2015,
Year2016=Year2016, Year2017=Year2017, Year2018=Year2018, Year2019=Year2019,
TFCL1=TFCL1, PreTrt2=PreTrt2,
PostTrt2=PostTrt2, DW3=(DW3-3)/2, AT3=(AT3-12)/5.5, Trt3=Trt3,
nall=nall, nvisit=nvisit, Year3=Year3, Stand3=Stand3))
# fit the model
system.time(out.oa1 <- jags(test.data.o, inits.o, params.o, model.a1, n.chains=4,
n.thin=10, n.iter=1100, n.burnin=100)) # s
#n.thin=10, n.iter=11000, n.burnin=1000)) # 4000s
#n.thin=20, n.iter=42000, n.burnin=2000)) # s
hist(out.oa1$BUGSoutput$summary[,8]) # small fraction (<1%?) less than 1.05
#rownames(out.oa1$BUGSoutput$summary[out.oa1$BUGSoutput$summary[,8]>1.1,])
out.oa1$BUGSoutput$summary[rownames(out.oa1$BUGSoutput$summary) %in% c("TrtEffect", "betaPre", "betaPost", "betaDW", "betaTF",
"betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"mu.a0", "mu.a1"),]
# diagnostic check
p.eff.oa1 <- out.oa1$BUGSoutput$sims.list$p
d.oa1 <- myFun(400, y=as.numeric(osslist$yo), p=p.eff.oa1)
summary(d.oa1) # 0.55
# model setup
Nst.e <- apply(osslist$ye, 1, max, na.rm=T)
inits.e <- function(){list(N=Nst.e)}
params.e <- c("beta0", "betaTF", "betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"betaDW", "betaPre", "betaPost", "TrtEffect",
"mu.a0", "mu.a1", "mu.a2", "mu.a3", "mu.a4", "mu.a5",
"a0", "aTrt", "aAT", "aAT2", "aTrtAT", "aTrtAT2",
"N", "theta", "p", "b0", "sd.b0")
test.data.e <- with(osslist, list(y=ye, nyear=nyear, nstand=nstand, Year2014=Year2014, Year2015=Year2015,
Year2016=Year2016, Year2017=Year2017, Year2018=Year2018, Year2019=Year2019,
TFCL1=TFCL1, PreTrt2=PreTrt2,
PostTrt2=PostTrt2, DW3=(DW3-3)/2, AT3=(AT3-12)/5.5, Trt3=Trt3,
nall=nall, nvisit=nvisit, Year3=Year3, Stand3=Stand3))
# fit the model
system.time(out.ea1 <- jags(test.data.e, inits.e, params.e, model.a1, n.chains=4,
n.thin=10, n.iter=1100, n.burnin=100)) # 229s
#n.thin=10, n.iter=11000, n.burnin=1000))
#n.thin=20, n.iter=42000, n.burnin=2000)) # s
hist(out.ea1$BUGSoutput$summary[,8]) # small fraction (<1%?) less than 1.05
#rownames(out.ea1$BUGSoutput$summary[out.ea1$BUGSoutput$summary[,8]>1.1,])
out.ea1$BUGSoutput$summary[rownames(out.ea1$BUGSoutput$summary) %in% c("TrtEffect", "betaPre", "betaPost", "betaDW", "betaTF",
"betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"mu.a0", "mu.a1"),]
# diagnostic check
p.eff.ea1 <- out.ea1$BUGSoutput$sims.list$p
d.ea1 <- myFun(400, y=as.numeric(osslist$ye), p=p.eff.ea1)
summary(d.ea1) # 0.58
save(out.oh1, out.eh1, out.oa1, out.ea1, file="Model objects.RData")
library(R2jags)
library(grid)
library(gridExtra)
library(abind)
library(tidyr)
library(ggplot2)
rm(list=ls())
expit <- function(x) 1/(1+exp(-x))
load("OSS ENES packaged data thru 2019.RData")
str(osslist)
load("Model objects.RData")
# naive occupancy
mean(apply(osslist$yo, 1, max, na.rm=T), na.rm=T) # 0.21 oss
mean(apply(osslist$ye, 1, max, na.rm=T), na.rm=T) # 0.15 enes
mean(apply(osslist$yo, 1, max, na.rm=T) + apply(osslist$ye, 1, max, na.rm=T) > 0, na.rm=T) # 0.29 any
mean(apply(osslist$yo, 1, max, na.rm=T) * apply(osslist$ye, 1, max, na.rm=T)) # 0.06 both
mean(apply(osslist$yo, 1, max, na.rm=T) - apply(osslist$ye, 1, max, na.rm=T) > 0, na.rm=T) # 0.14 oss only
mean(apply(osslist$yo, 1, max, na.rm=T) - apply(osslist$ye, 1, max, na.rm=T) < 0, na.rm=T) # 0.08 enes only
# unit-level naive occupancy
mean(unlist(lapply(split(apply(osslist$yo, 1, max, na.rm=T), osslist$Stand3), max)))
mean(unlist(lapply(split(apply(osslist$ye, 1, max, na.rm=T), osslist$Stand3), max)))
mean(unlist(lapply(split(apply(osslist$yo, 1, max, na.rm=T) + apply(osslist$ye, 1, max, na.rm=T) >0, osslist$Stand3), max)))
oh1.sl <- out.oh1$BUGSoutput$sims.list
eh1.sl <- out.eh1$BUGSoutput$sims.list
oa1.sl <- out.oa1$BUGSoutput$sims.list
ea1.sl <- out.ea1$BUGSoutput$sims.list
# trt effect estimator
exp(c(mean(oh1.sl$TrtEffect), quantile(oh1.sl$TrtEffect, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))) # 1.1 (0.6, 2.1)
out.oh1$BUGSoutput$summary[rownames(out.oh1$BUGSoutput$summary) %in% c("TrtEffect", "betaPre", "betaPost", "beta0", "betaDW", "betaTF",
"betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"mu.a0", "mu.a1"),]
# mean occ by year by trt arm
temp.oh1 <- with(oh1.sl, cbind(beta0+betaTF/2, beta0+betaYr14+betaTF/2, beta0+betaYr15+betaTF/2, beta0+betaYr16+betaTF/2,
beta0 + betaYr17 + betaTF/2, beta0 + betaYr18 + betaTF/2, beta0 + betaYr19 + betaTF/2,
beta0+betaPre+betaTF/2, beta0+betaPre+betaYr14+betaTF/2, beta0+betaPre+betaYr15+betaTF/2,
beta0+betaPost+betaYr16+betaTF/2, beta0 + betaPost + betaYr17 + betaTF/2,
beta0 + betaPost + betaYr18 + betaTF/2, beta0+betaPost+betaYr19+betaTF/2))
oh1.occ <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Year=2013:2019, Trt=c("Control", "Treatment"))
oh1.occ$Occ <- as.numeric(apply(temp.oh1, 2, function(x) expit(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
oh1.occ$HarvestState <- ifelse(oh1.occ$Year>2015 & oh1.occ$Trt=="Treatment", "Cut", "Timbered")
#oh1.occ2 <- spread(oh1.occ, Quantity, Occ) # replaced with code below, spread is now pivot_wider
oh1.occ2 <- pivot_wider(oh1.occ, names_from = Quantity, values_from = Occ)
oh1.occ2$Species <- rep("OSS", nrow(oh1.occ2))
# trt effect estimator
exp(c(mean(eh1.sl$TrtEffect), quantile(eh1.sl$TrtEffect, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))) # 0.20 (0.08, 0.47)
out.eh1$BUGSoutput$summary[rownames(out.eh1$BUGSoutput$summary) %in% c("TrtEffect", "betaPre", "betaPost", "beta0", "betaDW", "betaTF",
"betaYr14", "betaYr15", "betaYr16", "betaYr17", "betaYr18", "betaYr19",
"mu.a0", "mu.a1"),]
# mean occ by year by trt arm
temp.eh1 <- with(eh1.sl, cbind(beta0+betaTF/2, beta0+betaYr14+betaTF/2, beta0+betaYr15+betaTF/2, beta0+betaYr16+betaTF/2,
beta0 + betaYr17 + betaTF/2, beta0 + betaYr18 + betaTF/2, beta0 + betaYr19 + betaTF/2,
beta0+betaPre+betaTF/2, beta0+betaPre+betaYr14+betaTF/2, beta0+betaPre+betaYr15+betaTF/2,
beta0+betaPost+betaYr16+betaTF/2, beta0 + betaPost + betaYr17 + betaTF/2,
beta0 + betaPost + betaYr18 + betaTF/2, beta0+betaPost+betaYr19+betaTF/2))
eh1.occ <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Year=2013:2019, Trt=c("Control", "Treatment"))
eh1.occ$Occ <- as.numeric(apply(temp.eh1, 2, function(x) expit(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
eh1.occ$HarvestState <- ifelse(eh1.occ$Year>2015 & eh1.occ$Trt=="Treatment", "Cut", "Timbered")
#eh1.occ2 <- spread(eh1.occ, Quantity, Occ) # replaced with code below, spread is now pivot_wider
eh1.occ2 <- pivot_wider(eh1.occ, names_from = Quantity, values_from = Occ)
eh1.occ2$Species <- rep("ENES", nrow(eh1.occ2))
### FIGURE 1 ###
h1.occ <- merge(oh1.occ2, eh1.occ2, all=T)
h1.occ$Species <- factor(h1.occ$Species, levels=c("OSS", "ENES"))
h1.occ$Year <- with(h1.occ, ifelse(Trt=="Control", Year-0.05, Year+0.05))
oh1.occ2$Year <- with(oh1.occ2, ifelse(Trt=="Control", Year-0.05, Year+0.05))
ggplot(h1.occ, aes(Year, Mean, shape=Trt)) + geom_point(cex=2) + geom_line(aes(group=Trt)) +
theme_bw() + ylim(c(0,1)) + ylab("Occupancy probability") + facet_grid(Trt~Species) +
scale_shape_manual(values=c(16, 1)) + theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95))
#  win.metafile("OSS 2016 - Occ vs. Year by Trt.emf", width=8, height=6)
ggplot(h1.occ, aes(Year, Mean, shape=Trt)) + geom_point(cex=2) + geom_line(aes(group=Trt)) +
theme_bw() + ylim(c(0,1)) + ylab("Occupancy probability") + facet_grid(Species ~ Trt) +
scale_shape_manual(values=c(16, 1)) + theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95))
ggplot(h1.occ, aes(Year, Mean, color=Trt, shape=Trt)) + geom_point(cex=2) +
scale_shape_manual(values=c(16,1)) + geom_line(aes(group=Trt, linetype=Trt)) +
theme_bw() + ylim(c(0,1)) + ylab("Occupancy probability") + facet_wrap(~Species) +
theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95)) +
geom_vline(xintercept=2015.5, lty=2)
ggplot(oh1.occ2, aes(Year, Mean, color=Trt, shape=Trt)) + geom_point(cex=2) +
scale_shape_manual(values=c(16,1)) + geom_line(aes(group=Trt)) +
theme_bw() + ylim(c(0,1)) + ylab("Occupancy probability (90% CRI)") +
theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95)) +
geom_vline(xintercept=2015.5, lty=2)
# trt effect estimator
exp(c(mean(oa1.sl$TrtEffect), quantile(oa1.sl$TrtEffect, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))) # 0.84 (0.54, 1.4)
# mean abundance by year by trt arm
temp.oa1 <- with(oa1.sl, cbind(beta0+betaTF/2, beta0+betaYr14+betaTF/2, beta0+betaYr15+betaTF/2, beta0+betaYr16+betaTF/2,
beta0 + betaYr17 + betaTF/2, beta0 + betaYr18 + betaTF/2, beta0 + betaYr19 + betaTF/2,
beta0+betaPre+betaTF/2, beta0+betaPre+betaYr14+betaTF/2, beta0+betaPre+betaYr15+betaTF/2,
beta0+betaPost+betaYr16+betaTF/2, beta0 + betaPost + betaYr17 + betaTF/2,
beta0 + betaPost + betaYr18 + betaTF/2, beta0 + betaPost + betaYr19 + betaTF/2))
oa1.ab <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Year=2013:2019, Trt=c("Control", "Treatment"))
oa1.ab$N <- as.numeric(apply(temp.oa1, 2, function(x) exp(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
oa1.ab$HarvestState <- ifelse(oa1.ab$Year>2015 & oa1.ab$Trt=="Treatment", "Cut", "Timbered")
oa1.ab2 <- spread(oa1.ab, Quantity, N)
oa1.ab2$Species <- rep("OSS", nrow(oa1.ab2))
# trt effect estimator
exp(c(mean(ea1.sl$TrtEffect), quantile(ea1.sl$TrtEffect, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))) # 0.37 (0.22, 0.65)
# mean abundance by year by trt arm
temp.ea1 <- with(ea1.sl, cbind(beta0+betaTF/2, beta0+betaYr14+betaTF/2, beta0+betaYr15+betaTF/2, beta0+betaYr16+betaTF/2,
beta0 + betaYr17 + betaTF/2, beta0 + betaYr18 + betaTF/2, beta0 + betaYr19 + betaTF/2,
beta0+betaPre+betaTF/2, beta0+betaPre+betaYr14+betaTF/2, beta0+betaPre+betaYr15+betaTF/2,
beta0+betaPost+betaYr16+betaTF/2, beta0 + betaPost + betaYr17 + betaTF/2,
beta0 + betaPost + betaYr18 + betaTF/2, beta0 + betaPost + betaYr19 + betaTF/2))
ea1.ab <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Year=2013:2019, Trt=c("Control", "Treatment"))
ea1.ab$N <- as.numeric(apply(temp.ea1, 2, function(x) exp(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
ea1.ab$HarvestState <- ifelse(ea1.ab$Year>2015 & oa1.ab$Trt=="Treatment", "Cut", "Timbered")
ea1.ab2 <- spread(ea1.ab, Quantity, N)
ea1.ab2$Species <- rep("ENES", nrow(ea1.ab2))
### FIGURE 2 ###
a1.ab <- merge(oa1.ab2, ea1.ab2, all=T)
a1.ab$Species <- factor(a1.ab$Species, levels=c("OSS", "ENES"))
a1.ab$Year <- with(a1.ab, ifelse(Trt=="Control", Year-0.05, Year+0.05))
oa1.ab2$Year <- with(oa1.ab2, ifelse(Trt=="Control", Year-0.05, Year+0.05))
ggplot(a1.ab, aes(Year, Mean, shape=Trt)) + geom_point(cex=2) + geom_line(aes(group=Trt)) +
theme_bw() + ylab("Abundance") + facet_grid(Trt~Species) +
scale_shape_manual(values=c(16,1)) + geom_line(aes(group=Trt)) +
theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95))
#  win.metafile("OSS 2016 - Abundance vs. Year by Trt.emf", width=8, height=6)
ggplot(a1.ab, aes(Year, Mean, shape=Trt)) + geom_point(cex=2) + geom_line(aes(group=Trt)) +
theme_bw() + ylab("Abundance") + facet_grid(Species ~ Trt) +
scale_shape_manual(values=c(16,1)) + geom_line(aes(group=Trt)) +
theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95))
ggplot(a1.ab, aes(Year, Mean, shape=Trt, color=Trt)) + geom_point(cex=2) +
geom_line(aes(group=Trt, linetype=Trt)) +
theme_bw() + ylab("Abundance") + facet_wrap(~Species) +
scale_shape_manual(values=c(16,1)) + theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95)) +
geom_vline(xintercept=2015.5, lty=2)
ggplot(oa1.ab2, aes(Year, Mean, shape=Trt, color=Trt)) + geom_point(cex=2) +
geom_line(aes(group=Trt)) + ylim(c(0, 2.1)) +
theme_bw() + ylab("Abundance (90% CRI)") + #facet_wrap(~Species) +
scale_shape_manual(values=c(16,1)) + theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95)) +
geom_vline(xintercept=2015.5, lty=2)
## plot abundance and occupancy in one figure.
h1.occ$Model <- rep("Occupancy", nrow(h1.occ))
a1.ab$Model <- rep("Abundance", nrow(a1.ab))
x1 <- merge(h1.occ, a1.ab, all=T)
#  win.metafile("OSS 2017 - Abund and occ vs. Year by Trt.emf", width=8, height=6)
ggplot(x1, aes(Year, Mean, color=Trt, shape=Trt)) + geom_point(cex=2) +
scale_shape_manual(values=c(16,1)) + geom_line(aes(group=Trt)) +
theme_bw() + ylab("Mean estimate (90% CRI)") + facet_grid(Model~Species, scales="free_y") +
theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95))
p1 <- ggplot(h1.occ, aes(Year, Mean, color=Trt, shape=Trt)) + geom_point(cex=2) +
scale_shape_manual(values=c(16,1)) + geom_line(aes(group=Trt)) +
theme_bw() + ylim(c(0,1)) + ylab("Occupancy probability (90% CRI)") + facet_wrap(~Species) +
theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95)) +
geom_vline(xintercept=2015.5, lty=2)
p2 <- ggplot(a1.ab, aes(Year, Mean, shape=Trt, color=Trt)) + geom_point(cex=2) +
geom_line(aes(group=Trt)) +
theme_bw() + ylab("Abundance (90% CRI)") + facet_wrap(~Species) +
scale_shape_manual(values=c(16,1)) + theme(legend.title=element_blank(), legend.position="top") +
geom_segment(aes(x=Year, y=x25, xend=Year, yend=x5)) +
geom_segment(aes(x=Year, y=x75, xend=Year, yend=x95)) +
geom_vline(xintercept=2015.5, lty=2)
grid.arrange(p1, p2, ncol=1)
x1$Year <- round(x1$Year, 0)
write.csv(x1, "Occ and Ab est by year by trt by species _ 2019.csv", row.names=F)
# mean occ by trt arm
temp.oh1 <- with(oh1.sl, cbind(beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2,
beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2 + betaPost - betaPre))
oh1.occ <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Trt=c("Control", "Treatment"))
oh1.occ$Occ <- as.numeric(apply(temp.oh1, 2, function(x) expit(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
oh1.occ2 <- spread(oh1.occ, Quantity, Occ)
oh1.occ2$Species <- rep("OSS", nrow(oh1.occ2))
oh1.occ2$Response <- rep("Occ", nrow(oh1.occ2))
# mean occ by trt arm
temp.eh1 <- with(eh1.sl, cbind(beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2,
beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2 + betaPost - betaPre))
eh1.occ <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Trt=c("Control", "Treatment"))
eh1.occ$Occ <- as.numeric(apply(temp.eh1, 2, function(x) expit(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
eh1.occ2 <- spread(eh1.occ, Quantity, Occ)
eh1.occ2$Species <- rep("ENES", nrow(eh1.occ2))
eh1.occ2$Response <- rep("Occ", nrow(eh1.occ2))
# mean abundance by trt arm
temp.oa1 <- with(oa1.sl, cbind(beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2,
beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2 + betaPost - betaPre))
oa1.ab <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Trt=c("Control", "Treatment"))
oa1.ab$Ab <- as.numeric(apply(temp.oa1, 2, function(x) exp(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
oa1.ab2 <- spread(oa1.ab, Quantity, Ab)
oa1.ab2$Species <- rep("OSS", nrow(oa1.ab2))
oa1.ab2$Response <- rep("Abundance", nrow(oa1.ab2))
# mean occ by trt arm
temp.ea1 <- with(ea1.sl, cbind(beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2,
beta0 + betaYr14/7 + betaYr15/7 + betaYr16/7 + betaYr17/7 +
betaYr18/7 + betaYr19/7 + betaTF/2 + betaPost - betaPre))
ea1.ab <- expand.grid(Quantity=c("Mean", "x5", "x25", "x75", "x95"), Trt=c("Control", "Treatment"))
ea1.ab$Ab <- as.numeric(apply(temp.ea1, 2, function(x) exp(c(mean(x), quantile(x, probs=c(0.05, 0.25, 0.75, 0.95))))))
ea1.ab2 <- spread(ea1.ab, Quantity, Ab)
ea1.ab2$Species <- rep("ENES", nrow(ea1.ab2))
ea1.ab2$Response <- rep("Abundance", nrow(ea1.ab2))
ossmean <- full_join(oh1.occ2, eh1.occ2) %>% full_join(oa1.ab2) %>% full_join(ea1.ab2)
write_csv(ossmean, "Post harvest occ and ab by spp by trt _ 2019.csv")
boxplot(split(osslist$DW3, osslist$Trt3)) # very similar distributions
summary(osslist$DW3) # 0, 1, 3, 5, 18
quantile(osslist$DW3, probs=(0:20)/20) # 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6, 7, 8, 18
lapply(split(osslist$DW3, osslist$Trt3), mean)
lapply(split(osslist$DW3, osslist$Trt3), sd)
nsim <- 2000
exp(c(mean(0.5*oh1.sl$betaDW), quantile(0.5*oh1.sl$betaDW, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))) # 1.2 (1.1, 1.3)
oh1.dw.mat <- matrix(nrow=8, ncol=nsim)
samp <- sample(1:length(oh1.sl$beta0), nsim)
for(i in 1:nsim){
oh1.dw.mat[,i] <- oh1.sl$beta0[samp[i]] + oh1.sl$betaTF[samp[i]]/2 + oh1.sl$betaDW[samp[i]]*((0:7)-3)/2 +
oh1.sl$betaYr14[samp[i]]/7 + oh1.sl$betaYr15[samp[i]]/7 + oh1.sl$betaYr16[samp[i]]/7 + oh1.sl$betaYr17[samp[i]]/7 +
oh1.sl$betaYr18[samp[i]]/7 + oh1.sl$betaYr19[samp[i]]/7
}
exp(c(mean(0.5*oh1.sl$betaDW), quantile(0.5*oh1.sl$betaDW, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))) # 1.2 (1.1, 1.3)
oh1.dw.mat <- matrix(nrow=8, ncol=nsim)
samp <- sample(1:length(oh1.sl$beta0), nsim)
rm(list=ls())
load("OSS ENES packaged data thru 2019.RData")
str(osslist)
osslist$PreTrt2
osslist$PreTrt2 | osslist$PostTrt2
sum(osslist$PreTrt2 | osslist$PostTrt2)
sum(osslist$PreTrt2 | osslist$PostTrt2)*7
sum(osslist$PreTrt2)
sum(osslist$PostTrt2)
7*88
