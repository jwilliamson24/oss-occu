#add unique plot code, combo of stand#_replicate#_year_subplot
habitat_2023$plot_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year, "_", habitat_2023$subplot)
drop <- c("subplot_code")
habitat_2023 <- habitat_2023[,!(names(habitat_2023) %in% drop)]
View(habitat_2023)
df1 <- habitat_2023
View(df2)
View(df1)
View(df2)
site_2024 <- read.csv("oss_2024_site.csv")
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%Y") #format date
summary(site_2024)
#add unique site code, combo of stand#_replicate#_year_subplot
site_2024$site_id <- paste(site_2024$stand, "_", site_2024$site_rep,
"_", site_2024$year)
#subplot data
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#add unique site code, combo of stand#_replicate#_year
subplot_24$site_id <- paste(subplot_24$stand, "_", subplot_24$site_rep,
"_", subplot_24$year)
#2024 merge
df1 <- subplot_24
df2 <- site_2024
#search columns from df2 that are not in df1
df2_unique <- df2[, !(names(df2) %in% names(df1))]
print(df2_unique)
#keep only ones I want
df2 <- df2[,c("temp","elev","hum","site_id")]
df_merged <- merge(df1, df2, by="site_id")
drop <- c("moisture_1","moisture_2","moisture_3")
habitat_2024 <- df_merged[,!(names(df_merged) %in% drop)]
#create plot_id that has subplot in it
habitat_2024$plot_id <- paste(habitat_2024$site_id, "_", habitat_2024$subplot)
View(habitat_2024)
rm(list=ls())
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
library(tidyverse)
habitat_2023 <- read.csv("oss_2023_sitesubplot.csv")
habitat_2023$year <- 2023 #add year column to 2023 data
habitat_2023$date_mdy <- as.Date(habitat_2023$date, format = "%m/%d/%Y") #format date
summary(habitat_2023)
colnames(habitat_2023)
drop <- c(20:30)
habitat_2023 <- habitat_2023[, -drop]
#add unique site code, combo of stand#_replicate#_year
habitat_2023$site_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year)
#add unique plot code, combo of stand#_replicate#_year_subplot
habitat_2023$plot_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year, "_", habitat_2023$subplot)
colnames(habitat_2023)
drop <- c("subplot_code","litter_avg")
habitat_2023 <- habitat_2023[,!(names(habitat_2023) %in% drop)]
#site data
site_2024 <- read.csv("oss_2024_site.csv")
View(site_2024)
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%Y") #format date
summary(site_2024)
#add unique site code, combo of stand#_replicate#_year_subplot
site_2024$site_id <- paste(site_2024$stand, "_", site_2024$site_rep,
"_", site_2024$year)
#subplot data
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#add unique site code, combo of stand#_replicate#_year
subplot_24$site_id <- paste(subplot_24$stand, "_", subplot_24$site_rep,
"_", subplot_24$year)
summary(site_2024)
summary(subplot_2024)
summary(subplot_24)
df1 <- subplot_24
df2 <- site_2024
View(df2)
#search columns from df2 that are not in df1
# df2_unique <- df2[, !(names(df2) %in% names(df1))]
# print(df2_unique)
#keep only ones I want
df2 <- df2[,c("temp","elev","hum","site_id","tree_farm")]
View(site_2024)
df_merged <- merge(df1, df2, by="site_id")
View(df_merged)
colnames(habitat_2023)
colnames(df_merged)
sort(colnames(habitat_2023))
sort(colnames(df_merged))
habitat_2023 <- read.csv("oss_2023_sitesubplot.csv")
habitat_2023$year <- 2023 #add year column to 2023 data
habitat_2023$date_mdy <- as.Date(habitat_2023$date, format = "%m/%d/%Y") #format date
summary(habitat_2023)
colnames(habitat_2023)
drop <- c(20:30)
habitat_2023 <- habitat_2023[, -drop]
#add unique site code, combo of stand#_replicate#_year
habitat_2023$site_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year)
colnames(habitat_2023)
drop <- c("subplot_code","litter_avg","time")
habitat_2023 <- habitat_2023[,!(names(habitat_2023) %in% drop)]
habitat_2023 <- read.csv("oss_2023_sitesubplot.csv")
habitat_2023$year <- 2023 #add year column to 2023 data
habitat_2023$date_mdy <- as.Date(habitat_2023$date, format = "%m/%d/%Y") #format date
summary(habitat_2023)
colnames(habitat_2023)
drop <- c(20:30)
habitat_2023 <- habitat_2023[, -drop]
#add unique site code, combo of stand#_replicate#_year
habitat_2023$site_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year)
#add unique plot code, combo of stand#_replicate#_year_subplot
habitat_2023$plot_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year, "_", habitat_2023$subplot)
colnames(habitat_2023)
drop <- c("subplot_code","litter_avg","time")
habitat_2023 <- habitat_2023[,!(names(habitat_2023) %in% drop)]
site_2024 <- read.csv("oss_2024_site.csv")
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%Y") #format date
summary(site_2024)
#add unique site code, combo of stand#_replicate#_year_subplot
site_2024$site_id <- paste(site_2024$stand, "_", site_2024$site_rep,
"_", site_2024$year)
#subplot data
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#add unique site code, combo of stand#_replicate#_year
subplot_24$site_id <- paste(subplot_24$stand, "_", subplot_24$site_rep,
"_", subplot_24$year)
summary(subplot_24)
#2024 merge
df1 <- subplot_24
df2 <- site_2024
#search columns from df2 that are not in df1
# df2_unique <- df2[, !(names(df2) %in% names(df1))]
# print(df2_unique)
#keep only ones I want
df2 <- df2[,c("temp","elev","hum","site_id","tree_farm")]
df_merged <- merge(df1, df2, by="site_id")
sort(colnames(habitat_2023))
sort(colnames(df_merged))
drop <- c("moisture_1","moisture_2","moisture_3","site_rep","time","acc","time","obs")
habitat_2024 <- df_merged[,!(names(df_merged) %in% drop)]
#create plot_id that has subplot in it
habitat_2024$plot_id <- paste(habitat_2024$site_id, "_", habitat_2024$subplot)
sort(colnames(df1))
sort(colnames(df2))
df1 <- habitat_2023
df2 <- habitat_2024
sort(colnames(df1))
sort(colnames(df2))
habitat_2023 <- read.csv("oss_2023_sitesubplot.csv")
habitat_2023$year <- 2023 #add year column to 2023 data
habitat_2023$date_mdy <- as.Date(habitat_2023$date, format = "%m/%d/%Y") #format date
summary(habitat_2023)
colnames(habitat_2023)
drop <- c(20:30)
habitat_2023 <- habitat_2023[, -drop]
#add unique site code, combo of stand#_replicate#_year
habitat_2023$site_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year)
#add unique plot code, combo of stand#_replicate#_year_subplot
habitat_2023$plot_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year, "_", habitat_2023$subplot)
colnames(habitat_2023)
drop <- c("subplot_code","litter_avg","time","site_rep")
habitat_2023 <- habitat_2023[,!(names(habitat_2023) %in% drop)]
df1 <- habitat_2023
df2 <- habitat_2024
sort(colnames(df1))
sort(colnames(df2))
merge3 <- df1%>%
full_join(df2)
View(merge3)
sort(colnames(df2))
habitat_2324 <- merge3[,new_order]
new_order <- c("plot_id", "site_id","landowner","tree_farm", "stand","subplot",
"trt","year","date","date_mdy","lat","long","weather",
"elev","temp","hum","canopy_cov","veg_cov","dwd_cov","fwd_cov",
"soil_moist_avg")
habitat_2324 <- merge3[,new_order]
na_count <- colSums(is.na(habitat_2324))
print(na_count)
sals <- read_csv("sals.complete.csv")
View(sals)
#subset data
sals_occu <- sals[,c("site_id","subplot","spp")]
View(habitat_2023)
View(habitat_2024)
habitat_2023 <- read.csv("oss_2023_sitesubplot.csv")
View(habitat_2023)
habitat_2023 <- read.csv("oss_2023_sitesubplot.csv")
habitat_2023$year <- 2023 #add year column to 2023 data
habitat_2023$date_mdy <- as.Date(habitat_2023$date, format = "%m/%d/%Y") #format date
summary(habitat_2023)
colnames(habitat_2023)
drop <- c(20:30)
habitat_2023 <- habitat_2023[, -drop]
#add unique site code, combo of stand#_replicate#_year
habitat_2023$site_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year)
#add unique plot code, combo of stand#_replicate#_year_subplot
habitat_2023$plot_id <- paste(habitat_2023$stand, "_", habitat_2023$site_rep,
"_", habitat_2023$year, "_", habitat_2023$subplot)
colnames(habitat_2023)
drop <- c("subplot_code","litter_avg","time","site_rep")
habitat_2023 <- habitat_2023[,!(names(habitat_2023) %in% drop)]
#site data
site_2024 <- read.csv("oss_2024_site.csv")
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%Y") #format date
summary(site_2024)
#add unique site code, combo of stand#_replicate#_year_subplot
site_2024$site_id <- paste(site_2024$stand, "_", site_2024$site_rep,
"_", site_2024$year)
#subplot data
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#add unique site code, combo of stand#_replicate#_year
subplot_24$site_id <- paste(subplot_24$stand, "_", subplot_24$site_rep,
"_", subplot_24$year)
summary(subplot_24)
#2024 merge
df1 <- subplot_24
df2 <- site_2024
#search columns from df2 that are not in df1
# df2_unique <- df2[, !(names(df2) %in% names(df1))]
# print(df2_unique)
#keep only ones I want
df2 <- df2[,c("temp","elev","hum","site_id","tree_farm")]
df_merged <- merge(df1, df2, by="site_id")
sort(colnames(habitat_2023))
sort(colnames(df_merged))
drop <- c("moisture_1","moisture_2","moisture_3","site_rep","time","acc","time")
habitat_2024 <- df_merged[,!(names(df_merged) %in% drop)]
#create plot_id that has subplot in it
habitat_2024$plot_id <- paste(habitat_2024$site_id, "_", habitat_2024$subplot)
df1 <- habitat_2023
df2 <- habitat_2024
merge3 <- df1%>%
full_join(df2)
View(merge3)
new_order <- c("plot_id", "site_id","landowner","tree_farm", "stand","subplot",
"trt","year","date","date_mdy","lat","long","weather",
"elev","temp","hum","canopy_cov","veg_cov","dwd_cov","fwd_cov",
"soil_moist_avg","obs")
habitat_23_24 <- merge3[,new_order]
na_count <- colSums(is.na(habitat_23_24))
print(na_count)
View(sals_occu)
View(sals)
#subset data
sals_occu <- sals[,c("site_id","subplot","spp","obs")]
#add unique subplot code
sals_occu$plot_id <- paste(sals_occu$site_id,"_", sals_occu$subplot)
#collapse by subplot code to get count data
count <- sals_occu %>%
group_by(site_id, spp) %>%
summarize(count=n(), .groups = 'drop')
count$oss.oc <- ifelse(count$spp=="OSS",1,0)
count$enes.oc <- ifelse(count$spp=="ENES",1,0)
count$pldu.oc <- ifelse(count$spp=="PLDU",1,0)
count$tagr.oc <- ifelse(count$spp=="TAGR",1,0)
count$anfe.oc <- ifelse(count$spp=="ANFE",1,0)
count$amgr.oc <- ifelse(count$spp=="AMGR",1,0)
#creating count columns per spp
count$oss.tot <- ifelse(count$spp=="OSS",count$count,0)
count$enes.tot <- ifelse(count$spp=="ENES",count$count,0)
View(count)
#collapse by subplot code to get count data
sals_occu <- sals_occu %>%
group_by(site_id, spp) %>%
summarize(count=n(), .groups = 'drop')
#collapse by subplot code to get count data
sals_occu <- sals_occu %>%
group_by(site_id, spp, obs) %>%
summarize(count=n(), .groups = 'drop')
sals <- read_csv("sals.complete.csv")
#subset data
sals_occu <- sals[,c("site_id","subplot","spp","obs")]
#add unique subplot code
sals_occu$plot_id <- paste(sals_occu$site_id,"_", sals_occu$subplot)
#collapse by subplot code to get count data
sals_occu <- sals_occu %>%
group_by(site_id, spp, obs) %>%
summarize(count=n(), .groups = 'drop')
sals_occu <- sals_occu %>%
group_by(site_id, spp, obs) %>%
summarize(count=n(), .groups = 'drop')
#occupancy columns per spp
sals_occu$oss.oc <- ifelse(sals_occu$spp=="OSS",1,0)
sals_occu$enes.oc <- ifelse(sals_occu$spp=="ENES",1,0)
sals_occu$pldu.oc <- ifelse(sals_occu$spp=="PLDU",1,0)
sals_occu$tagr.oc <- ifelse(sals_occu$spp=="TAGR",1,0)
sals_occu$anfe.oc <- ifelse(sals_occu$spp=="ANFE",1,0)
sals_occu$amgr.oc <- ifelse(sals_occu$spp=="AMGR",1,0)
#creating total count columns per spp
sals_occu$oss.tot <- ifelse(sals_occu$spp=="OSS",sals_occu$count,0)
sals_occu$enes.tot <- ifelse(sals_occu$spp=="ENES",sals_occu$count,0)
sals_occu <- sals_occu %>%
select(-count)
sals_occu <- sals_occu %>%
select(-spp)
#merging not same lengths ######################################################
df1 <- habitat_23_24
df2 <- sals_occu
df_merged <- merge(df1, df2, by="site_id", all.x=TRUE)
View(df_merged)
View(df1)
View(df2)
sals <- read_csv("sals.complete.csv")
#subset data
sals_occu <- sals[,c("site_id","subplot","spp","obs")]
#add unique subplot code
sals_occu$plot_id <- paste(sals_occu$site_id,"_", sals_occu$subplot)
#collapse by subplot code to get count data
sals_occu <- sals_occu %>%
group_by(plot_id, spp, obs) %>%
summarize(count=n(), .groups = 'drop')
sals_occu$oss.oc <- ifelse(sals_occu$spp=="OSS",1,0)
sals_occu$enes.oc <- ifelse(sals_occu$spp=="ENES",1,0)
sals_occu$pldu.oc <- ifelse(sals_occu$spp=="PLDU",1,0)
sals_occu$tagr.oc <- ifelse(sals_occu$spp=="TAGR",1,0)
sals_occu$anfe.oc <- ifelse(sals_occu$spp=="ANFE",1,0)
sals_occu$amgr.oc <- ifelse(sals_occu$spp=="AMGR",1,0)
#creating total count columns per spp
sals_occu$oss.tot <- ifelse(sals_occu$spp=="OSS",sals_occu$count,0)
sals_occu$enes.tot <- ifelse(sals_occu$spp=="ENES",sals_occu$count,0)
sals_occu <- sals_occu %>%
select(-count)
sals_occu <- sals_occu %>%
select(-spp)
df1 <- habitat_23_24
df2 <- sals_occu
df_merged <- merge(df1, df2, by="plot_id", all.x=TRUE)
df_joined <- full_join(df1, df2, by="plot_id")
df_joined <- left_join(df1, df2, by="plot_id")
df_joined <- left_join(df1, df2, by="plot_id")
View(df_joined)
#merging not same lengths ######################################################
df1 <- habitat_23_24
df2 <- sals_occu
df_merged <- merge(df1, df2, by="plot_id", all.x=TRUE)
df_joined <- left_join(df1, df2, by="plot_id")
df3 <- df1 %>%
left_join(df2, by="plot_id")
View(df3)
df2_unique <- df2[, !(names(df2) %in% names(df1))]
print(df2_unique)
unique_to_df1 <- setdiff(df1$plot_id, df2$plot_id)
print(unique_to_df1)
sum(unique_to_df1)
count(unique_to_df1)
length(unique_to_df1)
unique_to_both <- union(unique_to_df1, unique_to_df2)
unique_to_df2 <- setdiff(df2$plot_id, df1$plot_id)
length(unique_to_df2)
na_count <- colSums(is.na(df_merged))
unique_to_df2 <- setdiff(df2$plot_id, df1$plot_id)
length(unique_to_df2)
unique_to_both <- union(unique_to_df1, unique_to_df2)
length(unique_to_both)
# Check for duplicates in df1
duplicates_df1 <- df1[duplicated(df1$plot_id) | duplicated(df1$plot_id, fromLast = TRUE), ]
print(duplicates_df1)
# Check for duplicates in df2
duplicates_df2 <- df2[duplicated(df2$plot_id) | duplicated(df2$plot_id, fromLast = TRUE), ]
print(duplicates_df2)
sals <- read_csv("sals.complete.csv")
#subset data
sals_occu <- sals[,c("site_id","subplot","spp")]
#add unique subplot code
sals_occu$plot_id <- paste(sals_occu$site_id,"_", sals_occu$subplot)
#collapse by subplot code to get count data
sals_occu <- sals_occu %>%
group_by(plot_id, spp) %>%
summarize(count=n(), .groups = 'drop')
sals_occu$oss.oc <- ifelse(sals_occu$spp=="OSS",1,0)
sals_occu$enes.oc <- ifelse(sals_occu$spp=="ENES",1,0)
sals_occu$pldu.oc <- ifelse(sals_occu$spp=="PLDU",1,0)
sals_occu$tagr.oc <- ifelse(sals_occu$spp=="TAGR",1,0)
sals_occu$anfe.oc <- ifelse(sals_occu$spp=="ANFE",1,0)
sals_occu$amgr.oc <- ifelse(sals_occu$spp=="AMGR",1,0)
#creating total count columns per spp
sals_occu$oss.tot <- ifelse(sals_occu$spp=="OSS",sals_occu$count,0)
sals_occu$enes.tot <- ifelse(sals_occu$spp=="ENES",sals_occu$count,0)
sals_occu <- sals_occu %>%
select(-count)
sals_occu <- sals_occu %>%
select(-spp)
df2 <- sals_occu
# Check for duplicates in df1
duplicates_df1 <- df1[duplicated(df1$plot_id) | duplicated(df1$plot_id, fromLast = TRUE), ]
print(duplicates_df1)
# Check for duplicates in df2
duplicates_df2 <- df2[duplicated(df2$plot_id) | duplicated(df2$plot_id, fromLast = TRUE), ]
print(duplicates_df2)
View(sals_occu)
sals <- read_csv("sals.complete.csv")
View(sals)
#add unique subplot code
sals$plot_id <- paste(sals$site_id,"_", sals$subplot)
#subset data
sals_occu <- sals[,c("plot_id","spp")]
#collapse by subplot code to get count data
sals_occu <- sals_occu %>%
group_by(plot_id) %>%
summarize(count=n(), .groups = 'drop')
#collapse by subplot code to get count data
sals_occu <- sals_occu %>%
group_by(spp) %>%
summarize(count=n(), .groups = 'drop')
sals <- read_csv("sals.complete.csv")
#add unique subplot code
sals$plot_id <- paste(sals$site_id,"_", sals$subplot)
#subset data
sals_occu <- sals[,c("plot_id","spp")]
#collapse by subplot code to get count data
trial1 <- sals_occu %>%
group_by(spp) %>%
summarize(count=n(), .groups = 'drop')
View(trial1)
#collapse by subplot code to get count data
trial1 <- sals_occu %>%
group_by(plot_id,spp) %>%
summarize(count=n(), .groups = 'drop')
sals_occu$oss.oc <- ifelse(sals_occu$spp=="OSS",1,0)
sals_occu$enes.oc <- ifelse(sals_occu$spp=="ENES",1,0)
trial1$oss.oc <- ifelse(trial1$spp=="OSS",1,0)
trial1$enes.oc <- ifelse(trial1$spp=="ENES",1,0)
# Count species occurrences and reshape the data
condensed_df <- trial1 %>%
group_by(plot_id, spp) %>%
summarise(count = n(), .groups = 'drop') %>%  # Count occurrences for each species
pivot_wider(names_from = spp, values_from = count, values_fill = 0)  # Reshape data
View(condensed_df)
sals <- read_csv("sals.complete.csv")
#add unique subplot code
sals$plot_id <- paste(sals$site_id,"_", sals$subplot)
#subset data
sals_occu <- sals[,c("plot_id","spp")]
#collapse by subplot code to get count data
trial1 <- sals_occu %>%
group_by(plot_id,spp) %>%
summarize(count=n(), .groups = 'drop')
# Count species occurrences and reshape the data
condensed_df <- trial1 %>%
group_by(plot_id) %>%
summarise(count = n(), .groups = 'drop') %>%  # Count occurrences for each species
pivot_wider(names_from = spp, values_from = count, values_fill = 0)  # Reshape data
# Count species occurrences and reshape the data
condensed_df <- trial1 %>%
group_by(plot_id, spp) %>%
summarise(count = n(), .groups = 'drop') %>%  # Count occurrences for each species
pivot_wider(names_from = spp, values_from = count, values_fill = 0)  # Reshape data
# Count species occurrences and reshape the data
condensed_df <- trial1 %>%
group_by(plot_id, spp) %>%
summarise(count = n(), .groups = 'drop') %>%  # Count occurrences for each species
pivot_wider(names_from = spp, values_from = count)  # Reshape data
# Count species occurrences and reshape the data
condensed_df <- trial1 %>%
group_by(plot_id, spp) %>%
summarise(count = n(), .groups = 'drop') %>%  # Count occurrences for each species
pivot_wider(names_from = spp, values_from = count, values_fill = list(count=0))  # Reshape data
sals <- read_csv("sals.complete.csv")
#add unique subplot code
sals$plot_id <- paste(sals$site_id,"_", sals$subplot)
#subset data
sals_occu <- sals[,c("plot_id","spp")]
View(sals_occu)
# Count species occurrences and reshape the data
condensed_df <- sals_occu %>%
group_by(plot_id, spp) %>%
summarise(count = n(), .groups = 'drop') %>%  # Count occurrences for each species
pivot_wider(names_from = spp, values_from = count, values_fill = list(count=0))  # Reshape data
#merging not same lengths ######################################################
df1 <- habitat_23_24
df2 <- condensed_df
df_merged <- merge(df1, df2, by="plot_id", all.x=TRUE)
# Replace NA with 0 for the specified rows
df_mer <- df_merged %>%
mutate(across(all_of(cols_to_update),
~ if_else(plot_id %in% rows_to_update & is.na(.), 0, .)))
#changing NA's in occu columns to zeros
cols_to_update <- c(23:28)
# Replace NA with 0 for the specified rows
df_mer <- df_merged %>%
mutate(across(all_of(cols_to_update),
~ if_else(plot_id %in% rows_to_update & is.na(.), 0, .)))
# Replace NA with 0 for the specified rows
df_mer <- df_merged %>%
mutate(across(all_of(cols_to_update),
~ if_else(plot_id %in% cols_to_update & is.na(.), 0, .)))
View(df_mer)
#changing NA's in occu columns to zeros
cols_to_update <- c("PLDU","ENES","OSS","AMGR","TAGR","ANFE")
# Replace NA with 0 for specific columns across all rows
df_merged[cols_to_update][is.na(df_merged[cols_to_update])] <- 0
View(df_merged)
na_count <- colSums(is.na(df_merged))
print(na_count)
write.csv(df_merged, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/habitat.occu.complete.csv",
row.names = FALSE)
