all.counts <- sals.agg %>%
group_by(site_id) %>%
summarise(detections = sum(detections))
# all oss detections
oss.counts <- subset(sals.agg, spp=="OSS")
sals.agg <- sals %>%
group_by(site_id,spp,detect) %>%
summarise(counts = sum(detect))
all.counts <- sals.agg %>%
group_by(site_id) %>%
summarise(counts = sum(detections))
sals.agg <- sals %>%
group_by(site_id,spp,detect) %>%
summarise(counts = sum(detect))
all.counts <- sals.agg %>%
group_by(site_id) %>%
summarise(counts = sum(counts))
# all oss detections
oss.counts <- subset(sals.agg, spp=="OSS")
View(all.counts)
# all enes captures
enes.counts <- subset(sals.agg, spp=="ENES")
View(enes.counts)
View(all.counts)
sals.agg <- sals %>%
group_by(site_id,spp) %>%
summarise(counts = sum(detect))
View(sals.agg)
all.counts <- sals.agg %>%
group_by(site_id) %>%
summarise(counts = sum(counts))
# all oss captures
oss.counts <- subset(sals.agg, spp=="OSS")
# all enes captures
enes.counts <- subset(sals.agg, spp=="ENES")
sals.all.sites <- rbind(sals.agg,sals$site_id)
sals.all.sites <- merge(sals.agg,sals$site_id)
View(sals.all.sites)
sals.all.sites <- left_join(sals.agg,sals,by="site_id")
View(site)
sals.all.sites <- left_join(sals.agg,site,by="site_id")
sals.all.sites <- merge(sals.agg,site,by="site_id")
unique(site$site_id)
length(unique(site$site_id))
length(unique(sals.all.sites$site_id))
sites <- site$site_id
sites <- site(site_id=all_sites)
sites
sites <- as.data.frame(site$site_id)
View(sites)
source("~/.active-rstudio-document", echo=TRUE)
as.data.frame(sites)
sals.all.sites <- merge(sals.agg,sites)
View(sals.all.sites)
sites <- site$site_id
sites <- unique(site$site_id)
head(sites)
sites <- data.frame(site_id=sites)
sals.all.sites <- merge(sals.agg,sites,by="site_id",all.x=TRUE)
View(sals.all.sites)
length(unique(sals.all.sites$site_id))
sals.all.sites <- merge(sites,sals.agg,by="site_id",all.x=TRUE)
length(unique(sals.all.sites$site_id))
sals.all.sites$counts[is.na(sals.all.sites$counts)] <- 0
# total counts of all spp
all.counts <- sals.all.sites %>%
group_by(site_id) %>%
summarise(counts = sum(counts))
# all oss captures
oss.counts <- subset(sals.all.sites, spp=="OSS")
# all enes captures
enes.counts <- subset(sals.all.sites, spp=="ENES")
length(unique(enes.counts))
length(unique(enes.counts$site_id))
#add non-detections and turn NAs to 0
oss.counts <- merge(sites,oss.counts,by="site_id",all.x=TRUE)
oss.counts$counts[is.na(oss.counts$counts)] <- 0
length(unique(oss.counts$site_id))
#add non-detections and turn NAs to 0
enes.counts <- merge(sites,enes.counts,by="site_id",all.x=TRUE)
enes.counts$counts[is.na(enes.counts$counts)] <- 0
length(unique(enes.counts$site_id))
View(enes.counts)
oss.counts <- [,-2]
oss.counts <- (,-2)
oss.counts <- oss.counts[,-2]
enes.counts <- enes.counts[,-2]
length(unique(enes.counts$site_id))
length(unique(oss.counts$site_id))
length(unique(all.counts$site_id))
length(all.counts$site_id)
length(oss.counts$site_id)
length(enes.counts$site_id)
View(sals.agg)
View(sals)
sals.agg <- sals %>%
group_by(site_id,subplot,spp) %>%
summarise(counts = sum(detect))
View(sals.agg)
View(subplot)
subplots <- subplot[,c(1,9)]
View(subplots)
#add non-detections and turn NAs to 0
sals.all.sub <- merge(subplots,sals.agg,by=c("site_id","subplot"),all.x=TRUE)
View(sals.all.sub)
sals.all.sub$counts[is.na(sals.all.sites$counts)] <- 0
sals.all.sub$counts[is.na(sals.all.sub$counts)] <- 0
# total counts of all spp
all.counts.sub <- sals.all.sub %>%
group_by(site_id,subplot) %>%
summarise(counts = sum(counts))
View(all.counts.sub)
# all oss captures
oss.counts.sub <- subset(sals.all.sub, spp=="OSS")
View(oss.counts.sub)
View(oss.counts.sub)
#add non-detections and turn NAs to 0
oss.counts.sub <- merge(subplots,oss.counts.sub,by=c("site_id","subplot"),all.x=TRUE)
oss.counts.sub$counts[is.na(oss.counts.sub$counts)] <- 0
oss.counts.sub <- oss.counts.sub[,-3]
# all enes captures
enes.counts.sub <- subset(sals.all.sub, spp=="ENES")
#add non-detections and turn NAs to 0
enes.counts.sub <- merge(subplots,enes.counts.sub,by=c("site_id","subplot"),all.x=TRUE)
enes.counts.sub$counts[is.na(enes.counts.sub$counts)] <- 0
enes.counts.sub <- enes.counts.sub[,-3]
View(enes.counts.sub)
rm(list=ls())
## set working directory
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Class Workshop Archive/FW599 R")
catch<-read.csv("Fish.catch.csv")
habitat<-read.csv("stream.habitat.csv")
water<-read.csv("Water.measures.csv")
# Problem 1
for(i in 4:9){
habitat[,i]<-ifelse(is.na(habitat[,i]),
mean(habitat[,i],na.rm = T),
habitat[,i])
}
summary(habitat)
# Problem 2
water$Stream <- ifelse(water$Stream == "Lower Ball Crk", "L Ball Crk",
ifelse(water$Stream == "Lower Drymans Fork", "L Drymans Fork",
ifelse(water$Stream == "Upper Ball Crk" , "U Ball Crk", water$Stream)))
survey.data<-merge(habitat, water, by=c("Stream","Date"), all=TRUE)
# Problem 3
mean.table<-aggregate(survey.data[c(4:13)], by = habitat[c(3)],mean,na.rm = T)
mean.table$Stats = "mean"
sd.table<-aggregate(survey.data[c(4:13)], by = habitat[c(3)],sd,na.rm = T)
sd.table$Stats = "sd"
summ.data<-rbind(mean.table,sd.table)
# Problem 4
spp.collect<-unique(catch[,1:4])
spp.collect$detect<-1
spp.richness<-aggregate(spp.collect$detect, by=spp.collect[,1:3],sum)
names(spp.richness)[names(spp.richness) == 'x'] <- 'detect'
View(spp.richness)
View(survey.data)
# Problem 5
correl <- merge(spp.richness,survey.data, all = TRUE)
View(catch)
View(correl)
correl$detect<- ifelse(is.na(for.correl$detect),0,for.correl$detect)
correl$detect<- ifelse(is.na(correl$detect),0,correl$detect)
cor(correl$detect, correl[,5:11], use= "pairwise.complete.obs")
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
site <- read.csv("site.complete.csv")
# dwd <- read.csv("dwd.complete.csv")
subplot <- read.csv("subplot.complete.csv")
sals <- read.csv("sals.complete.csv",
colClasses = c(landowner="factor", stand="character", trt="factor",
obs="factor", subplot="factor", recap="factor",
pass="factor", spp="factor", cover_obj="factor",
substrate="factor", age_class="factor"))
# all.long <- read.csv("all.occu.long.csv")
# oss.long <- read.csv("oss.occu.long.csv")
# enes.long <- read.csv("enes.occu.long.csv")
## captures by site -----------------------------------------------------------------------------------
# create df with counts and non-detections
sals$detect <- 1
sals.agg <- sals %>%
group_by(site_id,spp) %>%
summarise(counts = sum(detect))
sites <- unique(site$site_id)
sites <- data.frame(site_id=sites)
#add non-detections and turn NAs to 0
sals.all.sites <- merge(sites,sals.agg,by="site_id",all.x=TRUE)
sals.all.sites$counts[is.na(sals.all.sites$counts)] <- 0
# total counts of all spp
all.counts <- sals.all.sites %>%
group_by(site_id) %>%
summarise(counts = sum(counts))
# all oss captures
oss.counts <- subset(sals.all.sites, spp=="OSS")
#add non-detections and turn NAs to 0
oss.counts <- merge(sites,oss.counts,by="site_id",all.x=TRUE)
oss.counts$counts[is.na(oss.counts$counts)] <- 0
oss.counts <- oss.counts[,-2]
# all enes captures
enes.counts <- subset(sals.all.sites, spp=="ENES")
#add non-detections and turn NAs to 0
enes.counts <- merge(sites,enes.counts,by="site_id",all.x=TRUE)
enes.counts$counts[is.na(enes.counts$counts)] <- 0
enes.counts <- enes.counts[,-2]
## captures by subplot -----------------------------------------------------------------------------
# create df with counts and non-detections
sals$detect <- 1
sals.agg <- sals %>%
group_by(site_id,subplot,spp) %>%
summarise(counts = sum(detect))
subplots <- subplot[,c(1,9)]
#add non-detections and turn NAs to 0
sals.all.sub <- merge(subplots,sals.agg,by=c("site_id","subplot"),all.x=TRUE)
sals.all.sub$counts[is.na(sals.all.sub$counts)] <- 0
# total counts of all spp
all.counts.sub <- sals.all.sub %>%
group_by(site_id,subplot) %>%
summarise(counts = sum(counts))
# all oss captures
oss.counts.sub <- subset(sals.all.sub, spp=="OSS")
#add non-detections and turn NAs to 0
oss.counts.sub <- merge(subplots,oss.counts.sub,by=c("site_id","subplot"),all.x=TRUE)
oss.counts.sub$counts[is.na(oss.counts.sub$counts)] <- 0
oss.counts.sub <- oss.counts.sub[,-3]
# all enes captures
enes.counts.sub <- subset(sals.all.sub, spp=="ENES")
#add non-detections and turn NAs to 0
enes.counts.sub <- merge(subplots,enes.counts.sub,by=c("site_id","subplot"),all.x=TRUE)
enes.counts.sub$counts[is.na(enes.counts.sub$counts)] <- 0
enes.counts.sub <- enes.counts.sub[,-3]
correl <- merge(all.counts,site,all=TRUE)
View(correl)
cor(correl$counts,correl[,10:12])
# oss
correl <- merge(oss.counts,site,all=TRUE)
cor(correl$counts,correl[,10:12])
# enes
correl <- merge(enes.counts,site,all=TRUE)
cor(correl$counts,correl[,10:12])
# all spp
correl <- merge(all.counts.sub,subplot,all=TRUE)
cor(correl$counts,correl[,14:19])
cor(correl$counts,correl[,15:19])
# oss
correl <- merge(oss.counts.sub,subplot,all=TRUE)
cor(correl$counts,correl[,15:19])
# enes
correl <- merge(enes.counts.sub,subplot,all=TRUE)
cor(correl$counts,correl[,15:19])
df <- subset(subplot[,c('subplot','soil_moist_avg')])
#change to long format
df_long <- df %>%
pivot_longer(cols = -subplot, names_to = "variable", values_to = "value")
#add site id back in
df_long <- cbind(df_long, subplot$site_id)
# Reshape the data back to wide format, flipping the dimensions
df_wide <- df_long %>%
pivot_wider(names_from = subplot, values_from = value)
soil_moist_wide <- df_wide[,-1]
soil_moist_wide <- as.data.frame(soil_moist_wide)
rownames(soil_moist_wide) <- soil_moist_wide[,1]
soil_moist <- soil_moist_wide[,-1]
# weather
#subset df with only cols i need (cant use site id here bc its a character)
df <- subset(subplot[,c('subplot','weather')])
#change to long format
df_long <- df %>%
pivot_longer(cols = -subplot, names_to = "variable", values_to = "value")
#add site id back in
df_long <- cbind(df_long, subplot$site_id)
#reshape the data back to wide format, flipping the dimensions
df_wide <- df_long %>%
pivot_wider(names_from = subplot, values_from = value)
weather_wide <- df_wide[,-1]
weather_wide <- as.data.frame(weather_wide)
rownames(weather_wide) <- weather_wide[,1]
weather <- weather_wide[,-1]
## Site/occu covs ----------------------------------------------------------------------------------
sitecovs <- subset(site[,c('site_id','trt','date_mdy','elev','temp','hum')])
sitecovs$trt <- factor(sitecovs$trt,
levels = c("UU", "BU", "HB", "HU", "BS"))
# Scale Occupancy Covariates
sitecovs$site_id <- as.character(sitecovs$site)
# Identify numeric sitecovs
numeric_sitecovs <- sitecovs[sapply(sitecovs, is.numeric)]
# Scale the numeric sitecovs
scaled_numeric_sitecovs <- as.data.frame(scale(numeric_sitecovs))
# Combine the scaled numeric sitecovs with non-numeric sitecovs
scaled_sitecovs <- cbind(scaled_numeric_sitecovs, sitecovs[setdiff(names(sitecovs), names(numeric_sitecovs))])
View(scaled_sitecovs)
write.csv(scaled_sitecovs, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/scaled.sitecovs.csv")
scaled_sitecovs <- read.csv("scaled.sitecovs.csv")
# all spp
correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
View(correl)
write.csv(scaled_sitecovs, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/scaled.sitecovs.csv",
row.names = FALSE)
scaled_sitecovs <- read.csv("scaled.sitecovs.csv")
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
scaled_sitecovs <- read.csv("scaled.sitecovs.csv")
# Combine the scaled numeric sitecovs with non-numeric sitecovs
scaled_sitecovs <- cbind(scaled_numeric_sitecovs, sitecovs[setdiff(names(sitecovs), names(numeric_sitecovs))])
View(scaled_sitecovs)
write.csv(scaled_sitecovs, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/scaled.sitecovs.csv",
row.names = FALSE)
scaled_sitecovs <- read.csv("scaled.sitecovs.csv")
# all spp
correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
cor(correl$counts,correl[,3:5])
# oss
correl <- merge(oss.counts,scaled_sitecovs,all=TRUE)
cor(correl$counts,correl[,3:5])
# enes
correl <- merge(enes.counts,scaled_sitecovs,all=TRUE)
cor(correl$counts,correl[,3:5])
correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=counts, y=temp)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Captures") +
theme_minimal()
correl <- merge(all.counts,site,all=TRUE)
ggplot(correl, aes(x=counts, y=temp)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Captures") +
theme_minimal()
correl <- merge(oss.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=counts, y=temp)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Captures") +
theme_minimal()
correl <- merge(enes.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=counts, y=temp)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Captures") +
theme_minimal()
ggplot(correl, aes(x=counts, y=temp)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
correl <- merge(oss.counts,site,all=TRUE)
ggplot(correl, aes(x=counts, y=temp)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
correl <- merge(all.counts,site,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
correl <- merge(oss.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
correl <- merge(oss.counts,site,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
correl <- merge(enes.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
correl <- merge(enes.counts,site,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
# temp
correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
# temp
#correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
# correl <- merge(all.counts,site,all=TRUE)
correl <- merge(oss.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
# temp
#correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
# correl <- merge(all.counts,site,all=TRUE)
# correl <- merge(oss.counts,scaled_sitecovs,all=TRUE)
correl <- merge(oss.counts,site,all=TRUE)
ggplot(correl, aes(x=temp, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
ggplot(correl, aes(x=hum, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Temperature", y = "Count") +
theme_minimal()
ggplot(correl, aes(x=hum, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Humidity", y = "Count") +
theme_minimal()
# temp
correl <- merge(all.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=hum, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Humidity", y = "Count") +
theme_minimal()
correl <- merge(enes.counts,scaled_sitecovs,all=TRUE)
ggplot(correl, aes(x=hum, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Temperature", x = "Humidity", y = "Count") +
theme_minimal()
correl <- merge(oss.counts,site,all=TRUE)
ggplot(correl, aes(x=elev, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Elevation", x = "Elevation ft", y = "Count") +
theme_minimal()
correl <- merge(enes.counts,site,all=TRUE)
ggplot(correl, aes(x=elev, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Elevation", x = "Elevation ft", y = "Count") +
theme_minimal()
View(all.counts.sub)
correl <- merge(all.counts.sub,subplots,all=TRUE)
correl <- merge(all.counts.sub,subplot,all=TRUE)
correl <- merge(all.counts.sub,subplot,all=TRUE)
ggplot(correl, aes(x=canopy_cov, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
correl <- merge(oss.counts.sub,subplot,all=TRUE)
ggplot(correl, aes(x=canopy_cov, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
correl <- merge(enes.counts.sub,subplot,all=TRUE)
ggplot(correl, aes(x=canopy_cov, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
correl <- merge(all.counts.sub,subplot,all=TRUE)
ggplot(correl, aes(x=veg_cov, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
ggplot(correl, aes(x=dwd_cov, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
correl <- merge(oss.counts.sub,subplot,all=TRUE)
ggplot(correl, aes(x=dwd_cov, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
ggplot(correl, aes(x=soil.moist.avg, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
ggplot(correl, aes(x=soil_moist_avg, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Canopy Cover", x = "Canopy Cov", y = "Count") +
theme_minimal()
correl <- merge(oss.counts.sub,subplot,all=TRUE)
ggplot(correl, aes(x=soil_moist_avg, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Soil Moisture", x = "Soil Moisture", y = "Count") +
theme_minimal()
correl <- merge(enes.counts.sub,subplot,all=TRUE)
ggplot(correl, aes(x=soil_moist_avg, y=counts)) +
geom_point() +  # Plot points
geom_smooth(method = "loess", se = FALSE, color = "blue") +  # Add smooth line
labs(title = "Capture Counts vs. Soil Moisture", x = "Soil Moisture", y = "Count") +
theme_minimal()
