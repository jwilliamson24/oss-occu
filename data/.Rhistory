sals <- read.csv("sals.complete.csv",
colClasses = c(landowner="factor", stand="character", trt="factor",
obs="factor", subplot="factor", recap="factor",
pass="factor", spp="factor", cover_obj="factor",
substrate="factor", age_class="factor"))
#remove recaptures
sals <- sals[sals$recap != 1, ]
#subset of sals with site, subplot, spp
sals.new <- sals[,c(1,3,6,12,13,14)]
sals <- read.csv("sals.complete.csv",
colClasses = c(landowner="factor", stand="character", trt="factor",
obs="factor", subplot="factor", recap="factor",
pass="factor", spp="factor", cover_obj="factor",
substrate="factor", age_class="factor"))
#subset of sals with site, subplot, spp
sals.new <- sals[,c(1,3,6,12,13,14)]
#subset of oss with site, subplot, spp, pass
sals.oss <- subset(sals, spp=="OSS")
sals.oss <- sals[,c(1,3,6,12,13,14)]
#creating occupancy df with non-detections
df.new <- subplot[,c(1,9)] #new df with all subplots to merge sals df with
df.new$subplot <- as.factor(df.new$subplot)
View(df.new)
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge <- full_join(df.new,sals.oss,by=c("site_id","subplot"))
head(df.new)
df.new <- df.new[order(df.new$site_id, df.new$subplot),]
df.new$pass <- ave(df.new$subplot, df.new$site_id, df.new$subplot, FUN = seq_along)
head(df.new)
library(dplyr)
#creating occupancy df with non-detections
df.new <- subplot[,c(1,9)] # df with all 7 subplots for each site
df.new$subplot <- as.factor(df.new$subplot)
df.new <- df.new[order(df.new$site_id, df.new$subplot),] # reorder
# add 3 passes for each subplot
df.new <- df.new %>%
slice(rep(1:n(), each = 3)) %>%  # duplicate each row 3 times
group_by(site_id, subplot) %>%
mutate(pass = 1:3) %>%
ungroup()
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge <- full_join(df.new,sals.oss,by=c("site_id","subplot"))
View(sals.oss)
sals.oss$detect <- 1
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
df.new$pass <- as.factor(df.new$pass)
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
View(df.merge)
#subset of oss with site, subplot, spp, pass
sals.oss <- subset(sals, spp=="OSS")
sals.oss <- sals[,c(1,3,6,12,13,14)]
#subset of oss with site, subplot, spp, pass
sals.oss <- subset(sals, spp=="OSS")
sals.oss <- sals.oss[,c(1,3,6,12,13,14)]
sals.oss$detect <- 1
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
View(sals)
sals.oss <- sals.oss[,c(1,12,13,14)]
#subset of oss with site, subplot, spp, pass
sals.oss <- subset(sals, spp=="OSS")
sals.oss <- sals.oss[,c(1,12,13,14)]
sals.oss$detect <- 1
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge.o <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
df.merge.o$detect <- ifelse(is.na(df.merge.o$detect), 0, df.merge.o$detect) #make NA's = 0
View(df.merge.o)
df.merge.o <- df.merge.o[-4]
head[df.merge.o]
head(df.merge.o)
df.merge.o <- as.data.frame(df.merge.o)
head(df.merge.o)
df.wide.o <- df.merge.o %>%
pivot_wider(
id_cols = c(site_id, subplot),
names_from = pass,
values_from = detect,
names_prefix = "v"
)
View(sals)
df.merge.o <- df.merge.o %>%
group_by(site_id, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
df.merge.o <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
df.merge.o$detect <- ifelse(is.na(df.merge.o$detect), 0, df.merge.o$detect) #make NA's = 0
df.merge.o <- df.merge.o[-4]
df.merge.o <- as.data.frame(df.merge.o)
df.sum.o <- df.merge.o %>%
group_by(site_id, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
df.wide.o <- df.merge.o %>%
pivot_wider(
id_cols = c(site_id, subplot),
names_from = pass,
values_from = c(count, detect),
names_glue = "{.value}_pass{pass}"
)
df.wide.o <- df.sum.o %>%
pivot_wider(
id_cols = c(site_id, subplot),
names_from = pass,
values_from = c(count, detect),
names_glue = "{.value}_pass{pass}"
)
View(df.wide.o)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "pass"
)
View(dets.o)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "v"
)
sals.enes <- subset(sals, spp=="ENES")
sals.enes <- sals.enes[,c(1,12,13,14)]
sals.enes$detect <- 1
View(sals.enes)
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge.e <- full_join(df.new,sals.enes,by=c("site_id","subplot","pass"))
View(df.merge.e)
df.merge.e$detect <- ifelse(is.na(df.merge.e$detect), 0, df.merge.e$detect) #make NA's = 0
df.merge.e <- df.merge.e[-4]
df.merge.e <- as.data.frame(df.merge.e)
View(df.merge.e)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.e <- df.merge.e %>%
group_by(site_id, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.e <-  df.sum.e %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "v"
)
View(dets.e)
View(dets.o)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
# reshape for only detections
dets.e <-  df.sum.e %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
View(dets.e)
View(dets.o)
View(xo)
View(sals.oss)
View(sals)
View(sals)
View(subplot)
#creating occupancy df with non-detections
df.new <- subplot[,c(1,3,5,9)] # siteID, stand, subplots, treatment
df.new$subplot <- as.factor(df.new$subplot)
df.new <- df.new[order(df.new$site_id, df.new$subplot),] # reorder
View(df.new)
# add 3 passes for each subplot
df.new <- df.new %>%
slice(rep(1:n(), each = 3)) %>%  # duplicate each row 3 times
group_by(site_id, subplot) %>%
mutate(pass = 1:3) %>%
ungroup()
df.new$pass <- as.factor(df.new$pass)
View(df.new)
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge.o <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
View(df.merge.o)
df.merge.o$detect <- ifelse(is.na(df.merge.o$detect), 0, df.merge.o$detect) #make NA's = 0
df.merge.o <- df.merge.o[-6]
df.merge.o <- as.data.frame(df.merge.o)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.o <- df.merge.o %>%
group_by(site_id, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
View(dets.o)
View(df.merge.o)
View(df.sum.o)
View(df.merge.o)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.o <- df.merge.o %>%
group_by(site_id, stand, trt, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.o <- df.merge.o %>%
group_by(site_id, stand, trt, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
View(dets.o)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id,  stand, trt, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
#subset of enes with site, subplot, spp, pass
sals.enes <- subset(sals, spp=="ENES")
sals.enes <- sals.enes[,c(1,12,13,14)]
sals.enes$detect <- 1
#add in sites with no detections by merging with df that has all site/subplot combos listed
df.merge.e <- full_join(df.new,sals.enes,by=c("site_id","subplot","pass"))
df.merge.e$detect <- ifelse(is.na(df.merge.e$detect), 0, df.merge.e$detect) #make NA's = 0
df.merge.e <- df.merge.e[-6]
df.merge.e <- as.data.frame(df.merge.e)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.e <- df.merge.e %>%
group_by(site_id,  stand, trt, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.e <-  df.sum.e %>%
group_by(site_id,  stand, trt, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
View(dets.e)
head(xo)
head(xe)
head(dets.o)
head(dets.e)
dets.o <- as.data.frame(dets.o)
dets.e <- as.data.frame(dets.e)
head(dets.o)
head(dets.e)
View(site)
View(dets.e)
View(dets.o)
View(xo)
View(site)
View(subplot)
View(site)
site.lvl <- read.csv("/covariate matrices/sute_level_matrix.csv")
site.lvl <- read.csv("covariate matrices/sute_level_matrix.csv")
site.lvl <- read.csv("covariate matrices/site_level_matrix.csv")
View(subplot)
subplot.lvl <- read.csv("covariate matrices/habitat.occu.complete.csv")
dwd.count <- read.csv("covariate matrices/avg-dwd-subplot-matrix.csv")
View(dwd.count)
summary(xo)
summary(dwd.count)
View(site.lvl)
View(subplot.lvl)
View(dets.e)
dets.o <- merge(dets.o, site.lvl[, c("site_id", "jul_date")], by = "site_id", all.x = TRUE)
View(dets.o)
dets.o <- merge(dets.o, subplot.lvl[, c("site_id", "subplot", "temp")], by = c("site_id", "subplot"), all.x = TRUE)
View(dets.o)
View(dwd.count)
head(dwd.count)
# dwd
dwd.long <- dwd.count %>%
pivot_longer(cols = starts_with("X"),
names_to = "subplot",
names_prefix = "X",
values_to = "value") %>%
mutate(subplot = as.integer(subplot))
View(dwd.long)
# dwd
dwd.long <- dwd.count %>%
pivot_longer(cols = starts_with("X"),
names_to = "subplot",
names_prefix = "X",
values_to = "DW") %>%
mutate(subplot = as.integer(subplot))
View(dwd.long)
dets.o <- merge(dets.o, dwd.long[, c("site_id", "subplot", "DW")], by = c("site_id", "subplot"), all.x = TRUE) # dwd
View(dets.o)
dets.e <- merge(dets.e, site.lvl[, c("site_id", "jul_date")], by = "site_id", all.x = TRUE) # jul date
dets.e <- merge(dets.e, subplot.lvl[, c("site_id", "subplot", "temp")], by = c("site_id", "subplot"), all.x = TRUE) # temp
dets.e <- merge(dets.e, dwd.long[, c("site_id", "subplot", "DW")], by = c("site_id", "subplot"), all.x = TRUE) # dwd
View(dets.e)
# run pre-fire-matrices.R
head(xo) # pre-fire oss
head(xe) # pre-fire enes
xo2 <- xo[1,2,5:8,10:12,16]
xo2 <- xo[,c(1,2,5:8,10:12,16)]
View(xo2)
xe2 <- xe[,c(1,2,5:8,10:12,16)]
head(xo2)
head(dets.o)
colnames(xo2) <- c("stand","year","subplot","V1","V2","V3","DW","jul_date","temp","trt")
head(xo2)
xe2 <- xe[,c(1,2,5:8,10:12,16)]
head(xe2)
colnames(xe2) <- c("stand","year","subplot","V1","V2","V3","DW","jul_date","temp","trt")
head(xe2)
xo2$trt[xo2$trt == "Control"] <- "UU"
class(xo2$trt)
xo2$trt[xo2$trt == "Control"] <- "UU"
xo2$trt <- as.character(xo2$trt)
xo2$trt[xo2$trt == "Control"] <- "UU"
xo2$trt[xo2$trt == "PreTrt"] <- "UU"
xo2$trt[xo2$trt == "PostTrt"] <- "HU"
xo2$trt <- as.factor(xo2$trt)
xo2 <- xo[,c(1,2,5:8,10:12,16)]
colnames(xo2) <- c("stand","year","subplot","V1","V2","V3","DW","jul_date","temp","trt")
xo2$trt <- as.character(xo2$trt)
xo2$trt[xo2$trt == "Control"] <- "UU"
xo2$trt[xo2$trt == "PreTrt"] <- "UU"
xo2$trt[xo2$trt == "PostTrt"] <- "HU"
xe2$trt <- as.character(xe2$trt)
xe2$trt[xe2$trt == "Control"] <- "UU"
xe2$trt[xe2$trt == "PreTrt"] <- "UU"
xe2$trt[xe2$trt == "PostTrt"] <- "HU"
xe2$trt <- as.factor(xe2$trt)
View(xe2)
head(xo) # pre-fire oss
head(xe) # pre-fire enes
# run occu-matrices-updated052025.R
head(dets.o) # post-fire oss
head(dets.e) # post-fire enes
head(xo2)
head(xe2)
View(dets.e)
View(df.new)
View(subplot)
df.new <- subplot[,c(1,3,5,6,9)] # siteID, stand, subplots, year, treatment
df.new$subplot <- as.factor(df.new$subplot)
df.new <- df.new[order(df.new$site_id, df.new$subplot),] # reorder
# add 3 passes for each subplot
df.new <- df.new %>%
slice(rep(1:n(), each = 3)) %>%  # duplicate each row 3 times
group_by(site_id, subplot) %>%
mutate(pass = 1:3) %>%
ungroup()
df.new$pass <- as.factor(df.new$pass)
View(df.new)
df.merge.o <- full_join(df.new,sals.oss,by=c("site_id","subplot","pass"))
df.merge.o$detect <- ifelse(is.na(df.merge.o$detect), 0, df.merge.o$detect) #make NA's = 0
View(df.merge.o)
df.merge.o <- df.merge.o[-7]
df.merge.o <- as.data.frame(df.merge.o)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.o <- df.merge.o %>%
group_by(site_id, stand, trt, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id,  stand, trt, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
dets.o <- as.data.frame(dets.o)
View(dets.o)
View(dets.o)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.o <- df.merge.o %>%
group_by(site_id, stand, trt, year, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.o <-  df.sum.o %>%
group_by(site_id,  stand, trt, year, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
dets.o <- as.data.frame(dets.o)
View(dets.o)
df.merge.e <- full_join(df.new,sals.enes,by=c("site_id","subplot","pass"))
df.merge.e$detect <- ifelse(is.na(df.merge.e$detect), 0, df.merge.e$detect) #make NA's = 0
df.merge.e <- df.merge.e[-7]
df.merge.e <- as.data.frame(df.merge.e)
# summarize count and detections per site/subplot/pass so the rows are unique (no repliate rows)
df.sum.e <- df.merge.e %>%
group_by(site_id,  stand, trt, year, subplot, pass) %>%
summarise(
count = sum(detect, na.rm = TRUE),
detect = as.integer(sum(detect, na.rm = TRUE) > 0),
.groups = "drop"
)
# reshape for only detections
dets.e <-  df.sum.e %>%
group_by(site_id,  stand, trt, year, subplot, pass) %>%
summarise(detect = max(detect), .groups = "drop") %>%
pivot_wider(
names_from = pass,
values_from = detect,
names_prefix = "V"
)
dets.e <- as.data.frame(dets.e)
View(dets.e)
dets.o <- merge(dets.o, site.lvl[, c("site_id", "jul_date")], by = "site_id", all.x = TRUE) # jul date
dets.o <- merge(dets.o, subplot.lvl[, c("site_id", "subplot", "temp")], by = c("site_id", "subplot"), all.x = TRUE) # temp
dets.o <- merge(dets.o, dwd.long[, c("site_id", "subplot", "DW")], by = c("site_id", "subplot"), all.x = TRUE) # dwd
# enes
dets.e <- merge(dets.e, site.lvl[, c("site_id", "jul_date")], by = "site_id", all.x = TRUE) # jul date
dets.e <- merge(dets.e, subplot.lvl[, c("site_id", "subplot", "temp")], by = c("site_id", "subplot"), all.x = TRUE) # temp
dets.e <- merge(dets.e, dwd.long[, c("site_id", "subplot", "DW")], by = c("site_id", "subplot"), all.x = TRUE) # dwd
View(dets.e)
View(dets.o)
head(dets.o) # post-fire oss
head(dets.e) # post-fire enes
hear(xo2)
head(xo2)
head(xe2)
xo2$site_id <- paste(xo2$stand, 1, xo2$year, sep = " _ ")
xe2$site_id <- paste(xe2$stand, 1, xe2$year, sep = " _ ")
View(xe2)
View(xo2)
colnames(dets.o)
xo2 <- xo2[, c("site_id","subplot","stand","trt","year","V1","V2","V3","jul_date","temp","DW")]
colnames(xo2)
oss.full <- rbind(dets.o, xo2)
colnames(dets.e)
xe2 <- xe2[, c("site_id","subplot","stand","trt","year","V1","V2","V3","jul_date","temp","DW")]
enes.full <- rbind(dets.e, xe2)
View(enes.full)
write_csv(oss.full, "data/occupancy/oss.prepost.multiscale.occu.csv", rownames = FALSE)
write.csv(oss.full, "data/occupancy/oss.prepost.multiscale.occu.csv", rownames = FALSE)
write.csv(oss.full, "data/occupancy/oss.prepost.multiscale.occu.csv", row.names = FALSE)
write.csv(oss.full, "occupancy/oss.prepost.multiscale.occu.csv", row.names = FALSE)
View(oss.full)
write.csv(enes.full, "occupancy/enes.prepost.multiscale.occu.csv", row.names = FALSE)
