mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
#make columns factors to check for data entry errors
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y") #format date
dwd_2024$stand <- round(dwd_2024$stand, 0) #remove decimals from stand column
dwd_2024$site_id <- paste(dwd_2024$stand,"_",dwd_2024$site_rep,"_",dwd_2024$year) #add site_id column
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
#changing blank NA cells to zeros in the length class column
dwd.complete$length_cl[dwd.complete$length_cl == "" | is.na(dwd.complete$length_cl)] <- 0
dwd.complete$length_cl <- as.factor(dwd.complete$length_cl) #making it a factor
new_order <- c("site_id","landowner","stand","site_rep","trt","year","subplot",
"date","date_mdy","dwd_type","size_cl","decay_cl","char_cl","length_cl"               )
dwd.complete <- dwd.complete[,new_order]
summary(dwd.complete)
# save as csv
write.csv(dwd.complete, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/dwd.complete.csv",
row.names = FALSE)
dat <- read.csv("dwd.complete.csv")
dat$date_mdy <- as.Date(dat$date, format = "%m/%d/%Y")
dat$jul_date <- as.numeric(format(dat$date_mdy,"%j"))
str(dat)
# Group by 'site' and summarize
site_dwd <- dat %>%
group_by(site_id) %>%  # Group by site
summarize(
landowner = first(landowner),  # Average species count
stand = first(stand),  # Average for var2
trt = first(trt),
year = first(year),
jul_date = first(jul_date),
dwd_count = n(),
stumps = sum(dwd_type=="S"),
logs = sum(dwd_type=="L"),
size_cl = round(mean(size_cl),1),
decay_cl = round(mean(decay_cl),1),
char_cl = round(mean(char_cl),1),
length_cl = round(mean(length_cl),1)
)
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
#make columns factors to check for data entry errors
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y") #format date
dwd_2024$stand <- round(dwd_2024$stand, 0) #remove decimals from stand column
dwd_2024$site_id <- paste(dwd_2024$stand,"_",dwd_2024$site_rep,"_",dwd_2024$year) #add site_id column
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
dwd_2023 <- read.csv("oss_2023_dwd1.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
#make columns factors to check for data entry errors
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y") #format date
dwd_2024$stand <- round(dwd_2024$stand, 0) #remove decimals from stand column
dwd_2024$site_id <- paste(dwd_2024$stand,"_",dwd_2024$site_rep,"_",dwd_2024$year) #add site_id column
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
#changing blank NA cells to zeros in the length class column
dwd.complete$length_cl[dwd.complete$length_cl == "" | is.na(dwd.complete$length_cl)] <- 0
dwd.complete$length_cl <- as.factor(dwd.complete$length_cl) #making it a factor
new_order <- c("site_id","landowner","stand","site_rep","trt","year","subplot",
"date","date_mdy","dwd_type","size_cl","decay_cl","char_cl","length_cl"               )
dwd.complete <- dwd.complete[,new_order]
summary(dwd.complete)
dwd_20232 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd1.csv")
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd1.csv")
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd1.csv")
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
library(readr)
oss_2023_dwd1 <- read_csv("oss_2023_dwd1.csv")
View(oss_2023_dwd1)
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
#make columns factors to check for data entry errors
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y") #format date
dwd_2024$stand <- round(dwd_2024$stand, 0) #remove decimals from stand column
dwd_2024$site_id <- paste(dwd_2024$stand,"_",dwd_2024$site_rep,"_",dwd_2024$year) #add site_id column
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
#changing blank NA cells to zeros in the length class column
dwd.complete$length_cl[dwd.complete$length_cl == "" | is.na(dwd.complete$length_cl)] <- 0
dwd.complete$length_cl <- as.factor(dwd.complete$length_cl) #making it a factor
new_order <- c("site_id","landowner","stand","site_rep","trt","year","subplot",
"date","date_mdy","dwd_type","size_cl","decay_cl","char_cl","length_cl"               )
dwd.complete <- dwd.complete[,new_order]
summary(dwd.complete)
write.csv(dwd.complete, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/dwd.complete.csv",
row.names = FALSE)
dat <- read.csv("dwd.complete.csv")
dat$date_mdy <- as.Date(dat$date, format = "%m/%d/%Y")
dat$jul_date <- as.numeric(format(dat$date_mdy,"%j"))
str(dat)
# Group by 'site' and summarize
site_dwd <- dat %>%
group_by(site_id) %>%  # Group by site
summarize(
landowner = first(landowner),  # Average species count
stand = first(stand),  # Average for var2
trt = first(trt),
year = first(year),
jul_date = first(jul_date),
dwd_count = n(),
stumps = sum(dwd_type=="S"),
logs = sum(dwd_type=="L"),
size_cl = round(mean(size_cl),1),
decay_cl = round(mean(decay_cl),1),
char_cl = round(mean(char_cl),1),
length_cl = round(mean(length_cl),1)
)
View(dat)
dat$char_cl <- as.integer(dat$char_cl)
View(dwd.complete)
# Find the rows where char_cl cannot be coerced to numeric
non_numeric_rows <- dat[is.na(as.integer(dat$char_cl)) & !is.na(dat$char_cl), ]
print(non_numeric_rows)
str(dat)
# Group by 'site' and summarize
site_dwd <- dat %>%
group_by(site_id) %>%  # Group by site
summarize(
landowner = first(landowner),  # Average species count
stand = first(stand),  # Average for var2
trt = first(trt),
year = first(year),
jul_date = first(jul_date),
dwd_count = n(),
stumps = sum(dwd_type=="S"),
logs = sum(dwd_type=="L"),
size_cl = round(mean(size_cl),1),
decay_cl = round(mean(decay_cl),1),
char_cl = round(mean(char_cl),1),
length_cl = round(mean(length_cl),1)
)
View(site_dwd)
View(dwd.complete)
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
View(dwd_2023)
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
View(dwd_2023)
View(oss_2023_dwd1)
View(oss_2023_dwd1)
library(readr)
oss_2023_dwd <- read_csv("oss_2023_dwd.csv")
View(oss_2023_dwd)
dwd_2023 <- read.csv("oss_2023_dwd1.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y") #format date
dwd_2024$stand <- round(dwd_2024$stand, 0) #remove decimals from stand column
dwd_2024$site_id <- paste(dwd_2024$stand,"_",dwd_2024$site_rep,"_",dwd_2024$year) #add site_id column
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
#changing blank NA cells to zeros in the length class column
dwd.complete$length_cl[dwd.complete$length_cl == "" | is.na(dwd.complete$length_cl)] <- 0
dwd.complete$length_cl <- as.factor(dwd.complete$length_cl) #making it a factor
new_order <- c("site_id","landowner","stand","site_rep","trt","year","subplot",
"date","date_mdy","dwd_type","size_cl","decay_cl","char_cl","length_cl"               )
dwd.complete <- dwd.complete[,new_order]
summary(dwd.complete)
dat <- read.csv("dwd.complete.csv")
dat$date_mdy <- as.Date(dat$date, format = "%m/%d/%Y")
dat$jul_date <- as.numeric(format(dat$date_mdy,"%j"))
dat$char_cl <- as.integer(dat$char_cl)
str(dat)
# Group by 'site' and summarize
site_dwd <- dat %>%
group_by(site_id) %>%  # Group by site
summarize(
landowner = first(landowner),  # Average species count
stand = first(stand),  # Average for var2
trt = first(trt),
year = first(year),
jul_date = first(jul_date),
dwd_count = n(),
stumps = sum(dwd_type=="S"),
logs = sum(dwd_type=="L"),
size_cl = round(mean(size_cl),1),
decay_cl = round(mean(decay_cl),1),
char_cl = round(mean(char_cl),1),
length_cl = round(mean(length_cl),1)
)
View(site_dwd)
write.csv(dwd.complete, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/dwd.complete.csv",
row.names = FALSE)
dat <- read.csv("dwd.complete.csv")
dat$date_mdy <- as.Date(dat$date, format = "%m/%d/%Y")
dat$jul_date <- as.numeric(format(dat$date_mdy,"%j"))
dat$char_cl <- as.integer(dat$char_cl)
str(dat)
# Group by 'site' and summarize
site_dwd <- dat %>%
group_by(site_id) %>%  # Group by site
summarize(
landowner = first(landowner),  # Average species count
stand = first(stand),  # Average for var2
trt = first(trt),
year = first(year),
jul_date = first(jul_date),
dwd_count = n(),
stumps = sum(dwd_type=="S"),
logs = sum(dwd_type=="L"),
size_cl = round(mean(size_cl),1),
decay_cl = round(mean(decay_cl),1),
char_cl = round(mean(char_cl),1),
length_cl = round(mean(length_cl),1)
)
View(site_dwd)
extra_site_id <- anti_join(site_dwd, site_level_df, by = "site_id")
View(extra_site_id)
dwd_2023 <- read.csv("oss_2023_dwd1.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
#make columns factors to check for data entry errors
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y") #format date
dwd_2024$stand <- round(dwd_2024$stand, 0) #remove decimals from stand column
dwd_2024$site_id <- paste(dwd_2024$stand,"_",dwd_2024$site_rep,"_",dwd_2024$year) #add site_id column
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
#changing blank NA cells to zeros in the length class column
dwd.complete$length_cl[dwd.complete$length_cl == "" | is.na(dwd.complete$length_cl)] <- 0
dwd.complete$length_cl <- as.factor(dwd.complete$length_cl) #making it a factor
new_order <- c("site_id","landowner","stand","site_rep","trt","year","subplot",
"date","date_mdy","dwd_type","size_cl","decay_cl","char_cl","length_cl"               )
dwd.complete <- dwd.complete[,new_order]
summary(dwd.complete)
# save as csv
write.csv(dwd.complete, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/dwd.complete.csv",
row.names = FALSE)
dat <- read.csv("dwd.complete.csv")
dat$date_mdy <- as.Date(dat$date, format = "%m/%d/%Y")
dat$jul_date <- as.numeric(format(dat$date_mdy,"%j"))
dat$char_cl <- as.integer(dat$char_cl)
str(dat)
# Group by 'site' and summarize
site_dwd <- dat %>%
group_by(site_id) %>%  # Group by site
summarize(
landowner = first(landowner),  # Average species count
stand = first(stand),  # Average for var2
trt = first(trt),
year = first(year),
jul_date = first(jul_date),
dwd_count = n(),
stumps = sum(dwd_type=="S"),
logs = sum(dwd_type=="L"),
size_cl = round(mean(size_cl),1),
decay_cl = round(mean(decay_cl),1),
char_cl = round(mean(char_cl),1),
length_cl = round(mean(length_cl),1)
)
rm(list=ls())
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
library(tidyverse)
library(DescTools)
dat <- read.csv("dwd.complete.csv")
dat$date_mdy <- as.Date(dat$date, format = "%m/%d/%Y")
dat$jul_date <- as.numeric(format(dat$date_mdy,"%j"))
dat$char_cl <- as.integer(dat$char_cl)
str(dat)
# Group by 'site' and summarize
site_dwd <- dat %>%
group_by(site_id) %>%  # Group by site
summarize(
landowner = first(landowner),  # Average species count
stand = first(stand),  # Average for var2
trt = first(trt),
year = first(year),
jul_date = first(jul_date),
dwd_count = n(),
stumps = sum(dwd_type=="S"),
logs = sum(dwd_type=="L"),
size_cl = round(mean(size_cl),1),
decay_cl = round(mean(decay_cl),1),
char_cl = round(mean(char_cl),1),
length_cl = round(mean(length_cl),1)
)
View(site_dwd)
# check df
length(site_dwd$site_id)
length(unique(site_dwd$site_id))
# Find rows with non-unique site_id values (both duplicates and original rows)
non_unique <- site_dwd %>%
filter(site_id %in% site_id[duplicated(site_id)])
str(site_dwd)
site_dwd <- as.data.frame(site_dwd)
df1 <- readRDS(site_level_df)
site_level_df <- readRDS("~/Academic/OSU/Git/multivariate-analysis/site_level_df.rds")
df1 <- site_level_df
df2 <- site_dwd
df_merged <- merge(df1, df2, by="site_id", all.x=TRUE)
View(df_merged)
common <- intersect(names(df1),names(df2))
df_merged <- df1 %>%
select(-all_of(common_cols)) %>%
full_join(df2, by="site_id")
df_merged <- df1 %>%
select(-all_of(common)) %>%
full_join(df2, by="site_id")
View(site_level_df)
df2 <- site_dwd
drop <- c(2:6)
df2 <- df2[, -drop]
View(df2)
df_merged <- df1 %>%
left_join(df2, by = "site_id")
View(df_merged)
library(readr)
sals_complete <- read_csv("sals.complete.csv")
View(sals_complete)
write.csv(df_merged, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/multivariate-analysis/site_all_occu_dwd.csv",
row.names = FALSE)
write.csv(df_merged, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/multivariate-analysis/site_level_matrix.csv",
row.names = FALSE)
write.csv(df_merged, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/habitat.occu.complete.csv",
row.names = FALSE)
saveRDS(df_merged, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/habitat.occu.complete.rds")
saveRDS(site_level_df, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/site_level_df.rds")
write.csv(df_merged, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.csv",
row.names = FALSE)
saveRDS(df_merged, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
