site <- read.csv("site.complete.csv")
rm(list=ls())
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
#### Load data -----------------------------------------------------------------
site <- read.csv("site.complete.csv")
dwd <- read.csv("dwd.complete.csv")
subplot <- read.csv("subplot.complete.csv")
sals <- read.csv("sals.complete.csv",
colClasses = c(landowner="factor", stand="character", trt="factor",
obs="factor", subplot="factor", recap="factor",
pass="factor", spp="factor", cover_obj="factor",
substrate="factor", age_class="factor"))
length(sals$detect) # = 409
# add detection column to the entire sals data frame
sals$detect = 1
length(sals$detect) # = 409
head(sals)
#aggregate detections by stand
stand.detect <- aggregate(sals[c(21)], by=sals[c(3)], sum)
stand.detect
length(stand.detect$detect) # = 62
View(sals)
#unique number of stands in detection data frame
site.detect1 <- unique(sals[,c(3)])
length(site.detect1) # = 62
#unique instances of stand and treatment
site.detect <- unique(sals[,c(3,5)])
length(site.detect$stand) # = 64
#unique instances of stand, treatment, and year
site.detect.2 <- unique(sals[,c(3,5,6)])
length(site.detect.2$stand) # = 92
#unique instances of stand, trt, year, subplot
#gives single subplot detection as 1, not including repeats in a single subplot
site.detect.3 <- unique(sals[,c(3,5,6,12)])
length(site.detect.3$stand) # = 243
#aggregate detections by stand
stand.detect <- aggregate(sals[c(21)], by=sals[c(1)], sum)
stand.detect
length(stand.detect$detect) # = 62
#unique instances of stand, treatment, and year
site.detect.2 <- unique(sals[,c(1,5,6)])
length(site.detect.2$stand) # = 92
View(site.detect.2)
length(site.detect.2$site_id) # = 92
#unique number of stands in detection data frame
site.detect1 <- unique(sals[,c(1)])
length(site.detect1) # = 62
#unique instances of stand and treatment
site.detect <- unique(sals[,c(1,5)])
length(site.detect$stand) # = 64
length(site.detect$site_id) # = 64
#unique instances of stand, trt, year, subplot
#gives single subplot detection as 1, not including repeats in a single subplot
site.detect.3 <- unique(sals[,c(1,5,6,12)])
length(site.detect.3$site_id) # = 243
site.detect.4 <- unique(sals[,c(1,9)])
length(site.detect.4$site_id)
sals_2023 <- read.csv("sals.2023.csv")
sals_2024 <- read.csv("sals.2024.csv")
View(sals_2023)
sals_2023$detect = 1
length(sals_2023$detect) # = 180
length(unique(sals_2023$stand)) # = 42
length(unique(sals_2023$site_id))
#aggregate detections by stand
stand.detect <- aggregate(sals_2023[c(18)], by=sals_2023[c(1)], sum)
stand.detect
length(stand.detect$detect) # = 42
#unique number of sites in detection data frame    -- this is bc of 408178
site.detect1 <- unique(sals_2023[,c(1)])
length(site.detect1) # = 42
#unique instances of stand and treatment
site.detect <- unique(sals_2023[,c(2,3)])
length(site.detect$stand) # = 43
#unique instances of stand and treatment
#bc this doesnt accont for the twice surveyed 408178
site.detect <- unique(sals_2023[,c(3,5)])
length(site.detect$stand) # = 42
#unique instances of stand and treatment
#bc this doesnt accont for the twice surveyed 408178
site.detect <- unique(sals_2023[,c(1,5)])
length(site.detect$stand) # = 42
#unique instances of stand and treatment
#bc this doesnt accont for the twice surveyed 408178
site.detect <- unique(sals_2023[,c(3,5)])
length(site.detect$stand) # = 42
site.detect <- unique(sals_2023[,c(1,5)])
length(site.detect$site_id) # = 42
#unique instances of stand, treatment, and year
site.detect.2 <- unique(sals_2023[,c(2,3,4)])
length(site.detect.2$stand) # = 43
#unique instances of stand, trt, year, subplot
site.detect.3 <- unique(sals_2023[,c(3,5,6,12)])
length(site.detect.3$stand) # = 106
sals_2024$detect = 1
length(sals_2024$detect) # = 229
length(unique(sals_2024$stand)) # = 49
length(unique(sals_2024$site_id))
View(sals_2024)
#aggregate detections by site
stand.detect <- aggregate(sals_2024[c(21)], by=sals_2024[c(1)], sum)
stand.detect
length(stand.detect$detect) # = 49
#unique number of stands in detection data frame
site.detect1 <- unique(sals_2024[,c(2)])
length(site.detect1) # = 49
#unique number of stands in detection data frame
site.detect1 <- unique(sals_2024[,c(3)])
length(site.detect1) # = 49
#unique instances of stand and treatment
site.detect <- unique(sals_2024[,c(3,5)])
length(site.detect$stand) # = 49
length(unique(sals_2024$stand)) # = 47
length(unique(sals_2024$site_id)) # = 49
#unique instances of stand, treatment, and year
site.detect.2 <- unique(sals_2024[,c(3,5,6)])
length(site.detect.2$stand) # = 49
#unique instances of stand, trt, year, subplot
site.detect.3 <- unique(sals_2024[,c(3,5,6,12)])
length(site.detect.3$stand) # = 137
#unique instances of stand, treatment, and year
site.detect.2 <- unique(sals_2024[,c(3,4,5,6)])
length(site.detect.2$stand) # = 49
head(sals)
#counting the number of each species found over both seasons
spp.tot.counts <- table(sals$spp) #tally of spp counts
spp.tot.counts <- as.data.frame(spp.tot.counts) #make data frame
colnames(spp.tot.counts) <- c("spp","count") #format col names
spp.tot.counts
sum(spp.tot.counts$count)
#counting the number of salamanders observed in each treatment
sal.trt.counts <- table(sals$trt)
sal.trt.counts <- as.data.frame(sal.trt.counts)
colnames(sal.trt.counts) <- c("trt","count")
sal.trt.counts
sum(sal.trt.counts$count)
length(sals$detect) # = 409
#total subplot level detections by species
detections <- aggregate(sals[c(21)], by=sals[c(14)], sum)
detections
#detections just per treatment group
trt.detect <- aggregate(sals[c(21)], by=sals[c(5)], sum)
trt.detect
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
rm(list=ls())
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
library(tidyverse)
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
View(dwd_2023)
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
dwd_2023 <- dwd_2023[, -11] #delete random extra column
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", stand="character", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
View(dwd_2024)
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y")
rm(list=ls())
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
library(tidyverse)
#2023 data
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
View(dwd_2023)
dwd_2023 <- dwd_2023[, -4] #delete "id" column
dwd_2023 <- dwd_2023 %>%
group_by(stand) %>%
mutate(site_rep = row_number())
#2024 data
dwd_2024 <- read.csv("oss_2024_dwd.csv",
colClasses = c(landowner="factor", stand="character", trt="factor",
subplot="factor", dwd_type="factor", size_cl="factor",
decay_cl="factor", char_cl="factor"))
dwd_2024$date_mdy <- as.Date(dwd_2024$date, format = "%m/%d/%Y")
View(dwd_2024)
#add site_id column
dwd_2024$site_id <- paste(dwd_2024$stand,"_",dwd_2024$site_rep,"_",dwd_2024$year)
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
dwd_2023 <- read.csv("oss_2023_dwd.csv")
#identify rows with NA in decay class column
na_rows <- which(is.na(dwd_2023$decay_cl))
dwd_2023 <- dwd_2023[-na_rows, ] #Remove these rows from the data frame
#separate subplot code column into three columns by underscore
dwd_2023 <- dwd_2023 %>%
separate(subplot_code, into = c("stands", "trt", "subplot"), sep = "_")
#separate "stands" column into two columns by letters and numbers
dwd_2023 <- dwd_2023 %>%
mutate(landowner = str_extract(stands, "^([A-Za-z]+)"),
stand = str_extract(stands, "(?<=\\D)(\\d+)")) %>% #call new column "stand"
select(-stands) #remove original "stands" column
dwd_2023 <- dwd_2023[, -6] #delete "id" column
dwd_2023$date_mdy <- as.Date(dwd_2023$date, format = "%m/%d/%Y") #format date, add column
dwd_2023$subplot <- as.numeric(gsub("^0+", "", dwd_2023$subplot)) #remove leading 0 so both years match
#add site_id column
dwd_2023$site_id <- paste(dwd_2023$stand,"_",dwd_2023$site_rep,"_",dwd_2023$year)
#make columns factors to check for data entry errors
dwd_2023$trt <- as.factor(dwd_2023$trt)
dwd_2023$subplot <- as.factor(dwd_2023$subplot)
dwd_2023$dwd_type <- as.factor(dwd_2023$dwd_type)
dwd_2023$size_cl <- as.factor(dwd_2023$size_cl)
dwd_2023$decay_cl <- as.factor(dwd_2023$decay_cl)
dwd_2023$char_cl <- as.factor(dwd_2023$char_cl)
dwd_2023$landowner <- as.factor(dwd_2023$landowner)
#combine both years of downed wood
dwd.complete <- rbind(dwd_2023, dwd_2024)
#changing blank NA cells to zeros in the length class column
dwd.complete$length_cl[dwd.complete$length_cl == "" | is.na(dwd.complete$length_cl)] <- 0
dwd.complete$length_cl <- as.factor(dwd.complete$length_cl) #making it a factor
summary(dwd.complete)
#unique number of stands by year
unique_stands_by_year <- dwd.complete %>%
group_by(year) %>%
summarize(unique_stands = n_distinct(stand))
View(unique_stands_by_year)
new_order <- c("site_id","stand","landowner","site_rep","trt","year","subplot",
"date","date_mdy","dwd_type","size_cl","decay_cl","char_cl","length_cl"               )
dwd.complete <- dwd.complete[,new_order]
summary(dwd.complete)
new_order <- c("site_id","landowner","stand","site_rep","trt","year","subplot",
"date","date_mdy","dwd_type","size_cl","decay_cl","char_cl","length_cl"               )
dwd.complete <- dwd.complete[,new_order]
summary(dwd.complete)
# save as csv
write.csv(dwd.complete, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/dwd.complete.csv",
row.names = FALSE)
site_2023 <- read.csv("oss_2023_sitesubplot.csv")
site_2023$year <- 2023 #add year column to 2023 data
site_2023$date_mdy <- as.Date(site_2023$date, format = "%m/%d/%Y") #format date
summary(site_2023)
site_2024 <- read.csv("oss_2024_site.csv")
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%y") #format date
summary(site_2024)
#subset 2023/2024 data so that merged will only include cols they both have in common
site_2023_subset <- names(site_2023) %in% names(site_2024) #vector of 2023 col names that match 2024 col names
site_2024_subset <- names(site_2024) %in% names(site_2023) #vector of 2024 col names that match 2023 col  names
#rbind them to include only those cols in common
site_2023_2024 <- bind_rows(site_2023[site_2023_subset],site_2024[site_2024_subset])
#2023 has data for all subplots, so we need to work on that
#subset new data frame to inlcude only cols we care about for 2023
new_site_2023_subset <- subset(site_2023_2024, subset = year==2023)
#i want to average elev, temp, hum for all rows that have the same stand number
#this code creates new data frame with that info
site_2023_avg <- aggregate(cbind(temp,hum,elev)~stand,new_site_2023_subset,mean)
#prepare to merge site_2023_avg cols with other site cols
new_site_2023_subset[, c(5:7)] <- list(NULL) #remove old temp,hum,elev cols
new_site_2023_subset <- unique(new_site_2023_subset) #keep only one of each stand, remove duplicates
site_2023_joined <- inner_join(site_2023_avg,new_site_2023_subset,by="stand") #merge
summary(site_2023_joined)
View(site_2023_joined)
site_2023 <- read.csv("oss_2023_sitesubplot.csv")
site_2023$year <- 2023 #add year column to 2023 data
site_2023$date_mdy <- as.Date(site_2023$date, format = "%m/%d/%Y") #format date
summary(site_2023)
site_2024 <- read.csv("oss_2024_site.csv")
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%y") #format date
summary(site_2024)
#subset 2023/2024 data to include only columns in common
site_2023_subset <- names(site_2023) %in% names(site_2024) #vector of 2023 col names that match 2024 col names
site_2024_subset <- names(site_2024) %in% names(site_2023) #vector of 2024 col names that match 2023 col  names
#rbind to include only those cols in common
site_2023_2024 <- bind_rows(site_2023[site_2023_subset],site_2024[site_2024_subset])
#2023 has data for all subplots, so we need to work on that
#subset new data frame to inlcude only cols we care about for 2023
new_site_2023_subset <- subset(site_2023_2024, subset = year==2023)
#i want to average elev, temp, hum for all rows that have the same stand number
#this code creates new data frame with that info
site_2023_avg <- aggregate(cbind(temp,hum,elev)~stand,new_site_2023_subset,mean)
#prepare to merge site_2023_avg cols with other site cols
new_site_2023_subset[, c(5:7)] <- list(NULL) #remove old temp,hum,elev cols
new_site_2023_subset <- unique(new_site_2023_subset) #keep only one of each stand, remove duplicates
site_2023_joined <- inner_join(site_2023_avg,new_site_2023_subset,by="stand") #merge
summary(site_2023_joined)
#combine subsetted 2023 data with the 2024 site data and format
site.complete <- bind_rows(site_2023_joined,subset(site_2023_2024,subset=year==2024))
site.complete$landowner <- as.factor(site.complete$landowner)
site.complete$trt <- as.factor(site.complete$trt)
site.complete$stand <- as.integer(site.complete$stand)
View(site.complete)
rm(list=ls())
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
library(tidyverse)
site_2023 <- read.csv("oss_2023_sitesubplot.csv")
site_2023$year <- 2023 #add year column to 2023 data
site_2023$date_mdy <- as.Date(site_2023$date, format = "%m/%d/%Y") #format date
View(site_2023)
summary(site_2023)
site_2024 <- read.csv("oss_2024_site.csv")
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%y") #format date
summary(site_2024)
View(site_2024)
#subset 2023/2024 data to include only columns in common
site_2023_subset <- names(site_2023) %in% names(site_2024) #vector of 2023 col names that match 2024 col names
site_2024_subset <- names(site_2024) %in% names(site_2023) #vector of 2024 col names that match 2023 col  names
#rbind to include only those cols in common
site_2023_2024 <- bind_rows(site_2023[site_2023_subset],site_2024[site_2024_subset])
View(site_2023_2024)
#2023 has data for all subplots, so we need to work on that
#subset new data frame to inlcude only cols we care about for 2023
new_site_2023_subset <- subset(site_2023_2024, subset = year==2023)
#i want to average elev, temp, hum for all rows that have the same stand number
#this code creates new data frame with that info
site_2023_avg <- aggregate(cbind(temp,hum,elev)~stand,new_site_2023_subset,mean)
#prepare to merge site_2023_avg cols with other site cols
new_site_2023_subset[, c(7:9)] <- list(NULL) #remove old temp,hum,elev cols
new_site_2023_subset <- unique(new_site_2023_subset) #keep only one of each stand, remove duplicates
site_2023_joined <- inner_join(site_2023_avg,new_site_2023_subset,by="stand") #merge
summary(site_2023_joined)
site_2023 <- read.csv("oss_2023_sitesubplot.csv")
site_2023$year <- 2023 #add year column to 2023 data
site_2023$date_mdy <- as.Date(site_2023$date, format = "%m/%d/%Y") #format date
summary(site_2023)
site_2024 <- read.csv("oss_2024_site.csv")
site_2024$date_mdy <- as.Date(site_2024$date, format = "%m/%d/%y") #format date
summary(site_2024)
#subset 2023/2024 data to include only columns in common
site_2023_subset <- names(site_2023) %in% names(site_2024) #vector of 2023 col names that match 2024 col names
site_2024_subset <- names(site_2024) %in% names(site_2023) #vector of 2024 col names that match 2023 col  names
#rbind to include only those cols in common
site_2023_2024 <- bind_rows(site_2023[site_2023_subset],site_2024[site_2024_subset])
#2023 has data for all subplots, so we need to work on that
#subset new data frame to inlcude only cols we care about for 2023
new_site_2023_subset <- subset(site_2023_2024, subset = year==2023)
#i want to average elev, temp, hum for all rows that have the same stand number
#this code creates new data frame with that info
site_2023_avg <- aggregate(cbind(temp,hum,elev)~stand,new_site_2023_subset,mean)
View(new_site_2023_subset)
#prepare to merge site_2023_avg cols with other site cols
new_site_2023_subset[, c(6:8)] <- list(NULL) #remove old temp,hum,elev cols
new_site_2023_subset <- unique(new_site_2023_subset) #keep only one of each stand, remove duplicates
site_2023_joined <- inner_join(site_2023_avg,new_site_2023_subset,by="stand") #merge
summary(site_2023_joined)
#combine subsetted 2023 data with the 2024 site data and format
site.complete <- bind_rows(site_2023_joined,subset(site_2023_2024,subset=year==2024))
site.complete$landowner <- as.factor(site.complete$landowner)
site.complete$trt <- as.factor(site.complete$trt)
site.complete$stand <- as.integer(site.complete$stand)
View(site.complete)
#add unique site code, combo of stand#_replicate#_year
site.complete$site_id <- paste(site.complete$stand, "_", site.complete$site_rep,
"_", site.complete$year)
summary(site.complete)
#reorder
new_order <- c("site_id","landowner","stand","site_rep","trt","year", "date",
"date_mdy","elev","temp","hum")
site.complete <- site.complete[,new_order]
summary(site.complete)
# save as csv
write.csv(site.complete, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/site.complete.csv",
row.names = FALSE)
rm(list=ls())
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
library(tidyverse)
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data")
library(dplyr)
library(tidyr)
library(tidyverse)
site_2023 <- read.csv("oss_2023_sitesubplot.csv")
site_2023$year <- 2023 #add year column to 2023 data
site_2023$date_mdy <- as.Date(site_2023$date, format = "%m/%d/%Y") #format date
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#subset 2023/2024 data so that merged will only include cols they both have in common
subplot_23_subset <- names(site_2023) %in% names(subplot_24)
subplot_24_subset <- names(subplot_24) %in% names(site_2023)
#combine
subplot_23_24 <- bind_rows(site_2023[subplot_23_subset],subplot_24[subplot_24_subset])
View(subplot_23_24)
View(site_2023)
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#subset 2023/2024 data so that merged will only include cols they both have in common
subplot_23_subset <- names(site_2023) %in% names(subplot_24)
subplot_24_subset <- names(subplot_24) %in% names(site_2023)
#combine
subplot_23_24 <- bind_rows(site_2023[subplot_23_subset],subplot_24[subplot_24_subset])
View(subplot_23_24)
subplot_23_24$site_id <- paste(subplot_23_24$stand,"_",subplot_23_24$site_rep,
"_",subplot_23_24$year)
#add site_id column
subplot_23_24$site_id <- paste(subplot_23_24$stand,"_",subplot_23_24$site_rep,
"_",subplot_23_24$year)
#format
subplot_23_24$landowner <- as.factor(subplot_23_24$landowner)
subplot_23_24$trt <- as.factor(subplot_23_24$trt)
subplot_23_24$subplot <- as.factor(subplot_23_24$subplot)
subplot_23_24$weather <- as.factor(subplot_23_24$weather)
summary(subplot_23_24)
#reorder
new_order <- c("site_id","landowner","stand","site_rep","trt","year", "date",
"date_mdy","subplot","lat","long","time","weather","canopy_cov",
"dwd_cov","veg_cov","fwd_cov","soil_moist_avg")
site.complete <- site.complete[,new_order]
subplot_23_24 <- site.complete[,new_order]
subplot_23_24 <- subplot_23_24[,new_order]
View(subplot_23_24)
site_2023 <- read.csv("oss_2023_sitesubplot.csv")
site_2023$year <- 2023 #add year column to 2023 data
site_2023$date_mdy <- as.Date(site_2023$date, format = "%m/%d/%Y") #format date
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#subset 2023/2024 data so that merged will only include cols they both have in common
subplot_23_subset <- names(site_2023) %in% names(subplot_24)
subplot_24_subset <- names(subplot_24) %in% names(site_2023)
#combine
subplot_23_24 <- bind_rows(site_2023[subplot_23_subset],subplot_24[subplot_24_subset])
#add site_id column
subplot_23_24$site_id <- paste(subplot_23_24$stand,"_",subplot_23_24$site_rep,
"_",subplot_23_24$year)
#format
subplot_23_24$landowner <- as.factor(subplot_23_24$landowner)
subplot_23_24$trt <- as.factor(subplot_23_24$trt)
subplot_23_24$subplot <- as.factor(subplot_23_24$subplot)
subplot_23_24$weather <- as.factor(subplot_23_24$weather)
summary(subplot_23_24)
site_2023 <- read.csv("oss_2023_sitesubplot.csv")
site_2023$year <- 2023 #add year column to 2023 data
site_2023$date_mdy <- as.Date(site_2023$date, format = "%m/%d/%Y") #format date
subplot_24 <- read.csv("oss_2024_subplot.csv",
colClasses = c(landowner="factor", stand="character", trt="factor"))
subplot_24$date_mdy <- as.Date(subplot_24$date, format="%m/%d/%Y") #format date
subplot_24$stand <- as.integer(subplot_24$stand) #change stand so matches 2023 for merging
#subset 2023/2024 data so that merged will only include cols they both have in common
subplot_23_subset <- names(site_2023) %in% names(subplot_24)
subplot_24_subset <- names(subplot_24) %in% names(site_2023)
#combine
subplot_23_24 <- bind_rows(site_2023[subplot_23_subset],subplot_24[subplot_24_subset])
#add site_id column
subplot_23_24$site_id <- paste(subplot_23_24$stand,"_",subplot_23_24$site_rep,
"_",subplot_23_24$year)
#format
subplot_23_24$landowner <- as.factor(subplot_23_24$landowner)
subplot_23_24$trt <- as.factor(subplot_23_24$trt)
subplot_23_24$subplot <- as.factor(subplot_23_24$subplot)
subplot_23_24$weather <- as.factor(subplot_23_24$weather)
summary(subplot_23_24)
#reorder
new_order <- c("site_id","landowner","stand","site_rep","trt","year", "date",
"date_mdy","subplot","lat","long","time","weather","canopy_cov",
"dwd_cov","veg_cov","fwd_cov","soil_moist_avg")
subplot_23_24 <- subplot_23_24[,new_order]
# save as csv
write.csv(subplot_23_24, "C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/subplot.complete.csv",
row.names = FALSE)
